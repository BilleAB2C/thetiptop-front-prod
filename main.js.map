{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/services/authGuardEmp.service.ts","./src/app/forget-password/forget-password.component.ts","./src/app/forget-password/forget-password.component.html","./src/app/sidebar/sidebar.component.ts","./src/app/sidebar/sidebar.component.html","./src/app/header-client/header-client.component.ts","./src/app/header-client/header-client.component.html","./src/app/sidebar-emp/sidebar-emp.component.ts","./src/app/sidebar-emp/sidebar-emp.component.html","./src/app/profil/profil.component.ts","./src/app/profil/profil.component.html","./src/app/mail-password-sent/mail-password-sent.component.ts","./src/app/mail-password-sent/mail-password-sent.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/pipes/filter.pipe.ts","./src/app/services/authGuardAdmin.service.ts","./src/app/emp-login/emp-login.component.ts","./src/app/emp-login/emp-login.component.html","./src/app/emp-stats/emp-stats.component.ts","./src/app/emp-stats/emp-stats.component.html","./src/app/connexion/connexion.component.ts","./src/app/connexion/connexion.component.html","./src/app/header-emp/header-emp.component.ts","./src/app/header-emp/header-emp.component.html","./src/app/logo-footer/logo-footer.component.ts","./src/app/logo-footer/logo-footer.component.html","./src/app/landing/landing.component.ts","./src/app/landing/landing.component.html","./src/app/reinit-password/reinit-password.component.ts","./src/app/reinit-password/reinit-password.component.html","./src/app/emailing/emailing.component.ts","./src/app/emailing/emailing.component.html","./src/app/pop-up-delete/pop-up-delete.component.ts","./src/app/pop-up-delete/pop-up-delete.component.html","./src/app/services/token-interceptor.service.ts","./src/app/style-page/style-page.component.ts","./src/app/style-page/style-page.component.html","./src/app/index-view/index-view.component.ts","./src/app/index-view/index-view.component.html","./src/app/header-admin/header-admin.component.ts","./src/app/header-admin/header-admin.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/admin-modify-emp/admin-modify-emp.component.ts","./src/app/admin-modify-emp/admin-modify-emp.component.html","./src/app/register-confirmation/register-confirmation.component.ts","./src/app/register-confirmation/register-confirmation.component.html","./src/app/admin-login/admin-login.component.ts","./src/app/admin-login/admin-login.component.html","./src/app/app.module.ts","./src/app/admin-update-user/admin-update-user.component.ts","./src/app/list-emp/list-emp.component.ts","./src/app/list-emp/list-emp.component.html","./src/app/email-confirmation/email-confirmation.component.ts","./src/app/email-confirmation/email-confirmation.component.html","./src/app/sidebar-admin/sidebar-admin.component.ts","./src/app/sidebar-admin/sidebar-admin.component.html","./src/app/register-connexion/register-connexion.component.ts","./src/app/register-connexion/register-connexion.component.html","./src/app/services/authGuard.service.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/admin-home/admin-home.component.ts","./src/app/admin-home/admin-home.component.html","./src/app/admin-new-emp/admin-new-emp.component.ts","./src/app/admin-new-emp/admin-new-emp.component.html","./src/app/services/auth.service.ts","./src/app/simulateur-caisse/simulateur-caisse.component.ts","./src/app/simulateur-caisse/simulateur-caisse.component.html","./src/app/landing-page/landing-page.component.ts","./src/app/landing-page/landing-page.component.html","./src/app/history/history.component.ts","./src/app/history/history.component.html","./src/app/admin-list-users-view/admin-list-users-view.component.ts","./src/app/admin-list-users-view/admin-list-users-view.component.html","./src/app/emp-home/emp-home.component.ts","./src/app/emp-home/emp-home.component.html","./src/app/list-users/list-users.component.ts","./src/app/list-users/list-users.component.html","./src/app/app-routing.module.ts","./src/app/admin-list-emp/admin-list-emp.component.ts","./src/app/admin-list-emp/admin-list-emp.component.html","./src/app/pop-up/pop-up.component.ts","./src/app/pop-up/pop-up.component.html","./src/app/re-connect/re-connect.component.ts","./src/app/re-connect/re-connect.component.html","./src/app/emp-list-users-view/emp-list-users-view.component.ts","./src/app/emp-list-users-view/emp-list-users-view.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, ValidatorFn, ValidationErrors } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PopUpComponent } from '../pop-up/pop-up.component';\nimport { environment } from '../../environments/environment';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  error = false;\n  errorBody='';\n\n  constructor(\n    private httpClient: HttpClient,\n    private router : Router,\n    public dialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {\n  }\n  passwordRegex = /^(?=.*\\d)(?=.*[#$@!%&*?])[A-Za-z\\d#$@!%&*?]{8,}$/;\n  phoneRegex = /^(?:(?:\\+|00)33[\\s.-]{0,3}(?:\\(0\\)[\\s.-]{0,3})?|0)[1-9](?:(?:[\\s.-]?\\d{2}){4}|\\d{2}(?:[\\s.-]?\\d{3}){2})$/;\n  form = new FormGroup({\n    gender : new FormControl('', [Validators.required]),\n    firstName : new FormControl('', [Validators.required, Validators.minLength(2), Validators.maxLength(50) ]),\n    lastName : new FormControl('', [Validators.required, Validators.minLength(2), Validators.maxLength(50)]),\n    email: new FormControl('', [Validators.required, Validators.email]),\n    phone: new FormControl('', [Validators.pattern(this.phoneRegex)]),\n    password: new FormControl('', [Validators.required,Validators.minLength(8), Validators.pattern(this.passwordRegex)]),\n    confPassword: new FormControl('', [Validators.required]),\n    address: new FormControl('', [Validators.required, Validators.minLength(2)]),\n    city: new FormControl('', [Validators.required, Validators.minLength(2)]),\n    zip: new FormControl('', [Validators.required, Validators.minLength(2)]),\n    optin: new FormControl(''),\n    major: new FormControl('', [Validators.requiredTrue])\n  }\n  ,{\n    validators : this.mustMatch('password' ,'confPassword')\n  }\n);\n\n  get f(){\n    return this.form.controls;\n  }\n\n  mustMatch(controlName : string, matchingControlName : string) : ValidatorFn{\n      return (formGroup : FormGroup) : ValidationErrors=>{\n        const control = formGroup.controls[controlName];\n        const matchingControl = formGroup.controls[matchingControlName];\n        if (matchingControl.errors && !matchingControl.errors.mustMatch){\n          return\n        }\n        if(control.value !== matchingControl.value){\n          matchingControl.setErrors({mustMatch:true});\n        }\n        else{\n          matchingControl.setErrors(null)\n        }\n      }\n  }\n\n  submit(){\n    const url = environment.apiUrl+'/user/register/';\n    var optin ='';\n    if (this.form.value.optin) {\n      optin='yes';\n    }else {\n      optin='no';\n    }\n    const body  = {\n        gender : this.form.value.gender,\n        nom: this.form.value.lastName,\n        prenom: this.form.value.firstName,\n        email: this.form.value.email,\n        phoneNumber: this.form.value.phone,\n        password: this.form.value.password,\n        password_confirm: this.form.value.confPassword,\n        address: this.form.value.address,\n        zipCode: this.form.value.zip,\n        city: this.form.value.city,\n        optin: optin\n    }\n\n    this.httpClient\n    .post(url, body )\n    .toPromise()\n    .then(\n      (res : any) => {\n          this.router.navigate(['confirmation_register/'+this.form.value.email]);\n      },\n      (error) => {\n        this.error =true;\n        if (error.error.error == 'user already exist'){\n          this.errorBody = \"L'utilisateur existe déjà\";\n          var content = \"L'utilisateur existe déjà\";\n          var link = '/register';\n          this.openDialog(content, link);\n        }else {\n          var content = \"Une erreur est servenue, veuillez ressayer plus tard !\";\n          var link = '';\n          this.openDialog(content, link);\n        }\n      }\n    )\n  }\n\n  openDialog(content : String, link : String) {\n    this.dialog.open(PopUpComponent, {\n      width: '50%',\n      data: {\n        title: 'Erreur',\n        content: content,\n        link : link\n      }\n    });\n  }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"submit()\" class=\"w mx-auto\">\n  <p class=\"t-1\">S'inscrire</p>\n  <div class=\"d-flex\" *ngIf=\"error\">\n    <img class=\"icon mr-2\" src=\"../assets/img/exclamation.png\" alt=\"\">\n    <p class=\"pa-3\" >{{errorBody}}</p>\n  </div>\n  <p class=\"pa-1\">Creez un compte pour pouvoir profiter de vos gains. </p>\n  <div class=\"mb-3\">\n      <select\n          formControlName=\"gender\"\n          class=\"w-100\"\n          id=\"gender\"\n          type=\"text\"\n          [ngClass]=\"{'invalid-input' : f.gender.touched && f.gender.invalid}\"\n          required>\n          <option value=\"\" selected hidden disabled>Civilité *</option>\n          <option value=\"monsieur\">Monsieur</option>\n          <option value=\"madame\">Madame</option>\n      </select>\n      <div *ngIf=\"f.gender.touched && f.gender.invalid\" class=\"pa-3 mt-1 ml-2\">\n          <div *ngIf=\"f.gender.errors.required\">Veuillez sélectionner votre gendre</div>\n      </div>\n  </div>\n\n  <div class=\"mb-3\">\n      <input\n          formControlName=\"lastName\"\n          class=\"w-100\"\n          id=\"lastName\"\n          type=\"text\"\n          placeholder=\"Nom *\"\n          [ngClass]=\"{'invalid-input' : f.lastName.touched && f.lastName.invalid}\">\n      <div *ngIf=\"f.lastName.touched && f.lastName.invalid\" class=\"pa-3 mt-1 ml-2\">\n          <div *ngIf=\"f.lastName.errors.required\">Le nom est obligatoire</div>\n          <div *ngIf=\"f.lastName.errors.minlength\">Le nom doit contenir 4 caratères minimum</div>\n          <div *ngIf=\"f.lastName.errors.maxlength\">Le nom doit contenir 50 caratères maximum</div>\n      </div>\n  </div>\n\n  <div class=\"mb-3\">\n      <input\n          formControlName=\"firstName\"\n          class=\"w-100\"\n          id=\"firstName\"\n          type=\"text\"\n          placeholder=\"Prenom *\"\n          [ngClass]=\"{'invalid-input' : f.firstName.touched && f.firstName.invalid}\">\n      <div *ngIf=\"f.firstName.touched && f.firstName.invalid\" class=\"pa-3 mt-1 ml-2\">\n          <div *ngIf=\"f.firstName.errors.required\">Le prénom est obligatoire</div>\n          <div *ngIf=\"f.firstName.errors.minlength\">Le prénom doit contenir 4 caratères minimum</div>\n          <div *ngIf=\"f.firstName.errors.maxlength\">Le prénom doit contenir 50 caratères maximum</div>\n      </div>\n  </div>\n  <div class=\"mb-3\">\n      <input\n          formControlName=\"email\"\n          class=\"w-100\"\n          id=\"email\"\n          type=\"email\"\n          placeholder=\"Email *\"\n          [ngClass]=\"{'invalid-input' : f.email.touched && f.email.invalid}\">\n      <div *ngIf=\"f.email.touched && f.email.invalid\" class=\"pa-3 mt-1 ml-2\">\n          <div *ngIf=\"f.email.errors.required\">L'email est obligatoire</div>\n          <div *ngIf=\"f.email.errors.email\">Veuillez entrer une adresse email valide</div>\n      </div>\n  </div>\n  <div class=\"mb-3\">\n      <input\n          formControlName=\"phone\"\n          class=\"w-100\"\n          id=\"phone\"\n          type=\"phone\"\n          placeholder=\"Phone\"\n          [ngClass]=\"{'invalid-input' : f.phone.touched && f.phone.invalid}\">\n      <div *ngIf=\"f.phone.touched && f.phone.invalid\" class=\"pa-3 mt-1 ml-2\">\n          <div *ngIf=\"f.phone.invalid\">Le numéro de téléphone est invalide</div>\n      </div>\n  </div>\n  <div class=\"mb-3\">\n      <input\n          formControlName=\"password\"\n          id=\"password\"\n          class=\"w-100\"\n          type=\"password\"\n          placeholder=\"Mot de passe *\"\n          [ngClass]=\"{'invalid-input' : f.password.touched && f.password.invalid }\">\n      <div *ngIf=\"f.password.touched && f.password.invalid\" class=\"pa-3 mt-1 ml-2\">\n          <div *ngIf=\"f.password.errors.required\">Le mot de passe est obligatoire</div>\n          <div *ngIf=\"f.password.invalid\">Le mot de passe doit contenir 8 charactères minimum : 1 lettre, 1 chiffre et 1 charactère spécial </div>\n      </div>\n  </div>\n  <div class=\"mb-3\">\n      <input\n          formControlName=\"confPassword\"\n          id=\"confPassword\"\n          class=\"w-100\"\n          type=\"password\"\n          placeholder=\"Confirmation du mot de passe *\"\n          [ngClass]=\"{'invalid-input' : f.confPassword.touched && f.confPassword.invalid }\">\n      <div *ngIf=\"f.confPassword.touched && f.confPassword.invalid\" class=\"pa-3 mt-1 ml-2\">\n          <div *ngIf=\"f.confPassword.errors.required\">Veuillez confirmer le mot de passe</div>\n          <div *ngIf=\"f.confPassword.errors.mustMatch\">Les deux mots de passe ne sont pas identiques</div>\n      </div>\n  </div>\n  <div class=\"mb-3\">\n      <input\n          formControlName=\"address\"\n          id=\"address\"\n          class=\"w-100\"\n          type=\"text\"\n          placeholder=\"Adresse *\"\n          [ngClass]=\"{'invalid-input' : f.address.touched && f.address.invalid }\">\n      <div *ngIf=\"f.address.touched && f.address.invalid\" class=\"pa-3 mt-1 ml-2\">\n          <div *ngIf=\"f.address.errors.required\">Ce champs est obligatoire</div>\n      </div>\n  </div>\n  <div class=\"row no-gutters mb-3\">\n    <div class=\"col g-1\">\n      <div class=\"mb-3\">\n          <input\n              formControlName=\"zip\"\n              id=\"zip\"\n              class=\"w-100\"\n              type=\"text\"\n              placeholder=\"Code postale *\"\n              [ngClass]=\"{'invalid-input' : f.zip.touched && f.zip.invalid }\">\n          <div *ngIf=\"f.zip.touched && f.zip.invalid\" class=\"pa-3 mt-1\">\n              <div *ngIf=\"f.zip.errors.required\">Ce champs est obligatoire</div>\n          </div>\n      </div>\n    </div>\n    <div class=\"col g-1\">\n      <div class=\"mb-3\">\n          <input\n              formControlName=\"city\"\n              id=\"city\"\n              class=\"w-100\"\n              type=\"text\"\n              placeholder=\"Ville *\"\n              [ngClass]=\"{'invalid-input' : f.city.touched && f.city.invalid }\">\n          <div *ngIf=\"f.city.touched && f.city.invalid\" class=\"pa-3 mt-1 \">\n              <div *ngIf=\"f.city.errors.required\">Ce champs est obligatoire</div>\n          </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"d-flex checkbox-div\">\n    <div class=\"mb-3\">\n        <input\n            formControlName=\"optin\"\n            id=\"optin\"\n            class=\"checkbox\"\n            type=\"checkbox\">\n    </div>\n    <div class=\"pa-2\" >Oui, je souhaite recevoir les newsletters de TheTip Top informan des dernières nouveautés et des offres exclusives personnalisées par e-mail</div>\n  </div>\n  <div class=\"d-flex mb-3\">\n    <div class=\"mb-3\">\n        <input\n            formControlName=\"major\"\n            id=\"major\"\n            class=\"checkbox\"\n            type=\"checkbox\">\n        <div *ngIf=\"f.major.touched && f.major.invalid\" class=\"pa-3 mt-1 w-100\">\n            <div *ngIf=\"f.major.errors.required\"> </div>\n        </div>\n    </div>\n    <div class=\"pa-2\"\n         [ngClass]=\"{'pa-3' : f.major.touched && f.major.invalid }\">\n        En créant mon compte, je confirme avoir plus de 16 ans et avoir pris connaissance de la politique de Données personnelles et cookies.*\n    </div>\n  </div>\n\n  <button type=\"submit\" [disabled]=\"form.invalid\" class=\"btn-2\" >Créer mon compte</button>\n</form>\n","import { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { Router ,CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthGuardEmp implements CanActivate {\n  constructor ( private router :Router, private authService : AuthService) {}\n  canActivate (route : ActivatedRouteSnapshot, state : RouterStateSnapshot)\n    : Observable<boolean> | Promise<boolean> | boolean {\n      if (this.authService.getLoggedInStatus() && this.authService.getRole()=='employe'){\n        return true\n      }else{\n        this.router.navigate(['emp_login']);\n        return false;\n      }\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormGroup, FormControl, Validators} from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { PopUpComponent } from '../pop-up/pop-up.component';\nimport { environment } from '../../environments/environment';\n\n\n@Component({\n  selector: 'app-forget-password',\n  templateUrl: './forget-password.component.html',\n  styleUrls: ['./forget-password.component.scss']\n})\nexport class ForgetPasswordComponent implements OnInit {\n\n  constructor(\n    private httpClient : HttpClient,\n    private router : Router,\n    public dialog: MatDialog\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  form = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n  });\n\n  get f(){\n    return this.form.controls;\n  }\n\n  submit (){\n    const url = environment.apiUrl+'/user/forget';\n    const body  = {\n      email: this.form.value.email,\n    }\n    this.httpClient\n    .post(url, body )\n    .toPromise()\n    .then(\n      (res : any) => {\n        console.log(\"on est là\");\n\n        this.router.navigate(['mail_password_sent/'+this.form.value.email]);\n      },\n      (error) => {\n        if (error.error.error == 'user not found'){\n          var content = \"Cet utilisateur n'existe pas !\";\n          var link = 'password_forgotten';\n          this.openDialog(content, link);\n        }else if (error.error.error == 'email is not valid'){\n          var content = \"L'adresse email qie vous avez saisi n'est pas valide, veuillez saisir une adresse email valide !\";\n          var link = 'password_forgotten';\n          this.openDialog(content, link);\n        }else{\n          var content = \"Une erreur est servenue, veuillez ressayer plus tard !\";\n          var link = '';\n          this.openDialog(content, link);\n        }\n      }\n    )\n  }\n\n  openDialog(content : String, link : String) {\n    this.dialog.open(PopUpComponent, {\n      width: '50%',\n      data: {\n        title: 'Erreur',\n        content: content,\n        link : link\n      }\n    });\n  }\n}\n","<app-header></app-header>\n<div class=\"brd-top-1 brd-btm-1 p-5\">\n  <form class= \"w mx-auto\" [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n    <p class=\"t-1 mb-5\">Mot de passe oublié</p>\n    <p class=\"pa-1 mb-4\">Saisir l'adresse email associée à votre compte.\n      Nous vous enverrons un lien par email pour réinitialiser\n      votre mot de passe.</p>\n      <div class=\"mb-4\">\n          <input\n              formControlName=\"email\"\n              class=\"w-100 mb-1\"\n              id=\"email\"\n              type=\"text\"\n              placeholder=\"Email\"\n              [ngClass]=\"{'invalid-input' : f.email.touched && f.email.invalid}\">\n          <div *ngIf=\"f.email.touched && f.email.invalid\" class=\"pa-3 mt-1 ml-2 text-left\">\n              <div *ngIf=\"f.email.errors.required\">L'email est obligatoire</div>\n              <div *ngIf=\"f.email.errors.email\">Veuillez rentrer une adresse email valide</div>\n          </div>\n      </div>\n      <div class=\"d-flex\">\n        <button type=\"submit\" class=\"btn-2 mx-auto\" [disabled]=\"form.invalid\">Valider</button>\n      </div>\n  </form>\n</div>\n<app-footer></app-footer>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor(\n    private authService : AuthService,\n    private router : Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  seDeconnecter (){\n    this.authService.deconnexion();\n    this.router.navigate(['']);\n  }\n\n}\n","<div class=\"sidebar brd-right-1 \" id=\"sidebarSupportedContent\">\n  <div class=\"brd-btm-1 d-flex\">\n    <a class=\"my-auto nav-link text-dark ml-2\" href=\"client_home\">Mes gains</a>\n  </div>\n  <div class=\"brd-btm-1 d-flex\">\n    <a class=\"my-auto nav-link text-dark ml-2\" href=\"client_infos_profil\">Mon Profil</a>\n  </div>\n  <div class=\"brd-btm-1 d-flex\">\n    <a class=\"my-auto nav-link text-dark ml-2 cursor-pointer\" (click)=\"seDeconnecter()\">Déconnexion</a>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n\n\n@Component({\n  selector: 'app-header-client',\n  templateUrl: './header-client.component.html',\n  styleUrls: ['./header-client.component.scss']\n})\nexport class HeaderClientComponent implements OnInit {\n\n  constructor(\n    private authService : AuthService,\n    private router : Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n  \n  seDeconnecter (){\n    this.authService.deconnexion();\n    this.router.navigate(['']);\n  }\n}\n","<nav class=\"navbar navbar-expand-md p-4 navbar-light\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" href=\"\">\n      <img class=\"img-fluid\" src=\"assets/img/logo-noir.png\">\n    </a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon text-dark\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse justify-content-end\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav align-items-center\">\n        <li class=\"nav-item ml-2 d-none d-md-block \">\n          <a class=\"a-1\" href=\"client_home\">Accueil</a>\n        </li>\n        <li class=\"nav-item ml-2\">\n          <a class=\"nav-link text-white pt-0 e-shop-button\" href=\"#\">\n            <i class=\"bi bi-bag-fill fs-5\" style=\"font-size:25px;\"></i>\n            E-Shop\n          </a>\n        </li>\n        <li class=\"nav-item ml-2 d-md-none\">\n          <a class=\"nav-link text-dark underline-hover\" href=\"client_home\">Accueil</a>\n        </li>\n        <li class=\"nav-item ml-2 d-md-none\">\n          <a class=\"nav-link text-dark underline-hover\" href=\"client_home\">Mon profil</a>\n        </li>\n        <li class=\"nav-item ml-2 d-md-none\">\n          <a class=\"nav-link text-dark underline-hover\" (click)=\"seDeconnecter()\" >Déconnexion</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-sidebar-emp',\n  templateUrl: './sidebar-emp.component.html',\n  styleUrls: ['./sidebar-emp.component.scss']\n})\nexport class SidebarEmpComponent implements OnInit {\n\n  constructor(\n    private authService : AuthService,\n    private router : Router\n\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  seDeconnecter (){\n    this.authService.deconnexion();\n    this.router.navigate(['']);\n  }\n}\n","<div class=\"sidebar brd-right-1\" id=\"sidebarEmpSupportedContent\">\n  <div class=\"brd-btm-1 d-flex\">\n    <a class=\"my-auto nav-link text-dark ml-2\" routerLink=\"/emp\">Recherche gain</a>\n  </div>\n  <div class=\"brd-btm-1 d-flex\">\n    <a class=\"my-auto nav-link text-dark ml-2\" routerLink=\"/emp_store\">Mon magasin</a>\n  </div>\n  <div class=\" d-flex\">\n    <a class=\"my-auto nav-link text-dark ml-2\" (click)=\"seDeconnecter()\">Deconnexion</a>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { User } from '../models/User';\nimport { AuthService } from '../services/auth.service';\n\nimport { FormGroup, FormControl, Validators, ValidatorFn, ValidationErrors } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PopUpComponent } from '../pop-up/pop-up.component';\nimport { environment } from '../../environments/environment';\n\n\n@Component({\n  selector: 'app-profil',\n  templateUrl: './profil.component.html',\n  styleUrls: ['./profil.component.scss']\n})\nexport class ProfilComponent implements OnInit {\n  @Input() user$ : Observable<User> ;\n  passwordIncorrect = false;\n  passwordNotIdenticals =false;\n\n  constructor(\n    private httpClient : HttpClient,\n    private authService : AuthService,\n    private router : Router,\n    public dialog: MatDialog\n  ) { }\n\n  ngOnInit(): void {\n    var url = environment.apiUrl+\"/user/me\";\n    this.user$ = this.httpClient.get<User>(url);\n  }\n\n  passwordRegex = /^(?=.*\\d)(?=.*[#$@!%&*?])[A-Za-z\\d#$@!%&*?]{8,}$/;\n  phoneRegex = /^(?:(?:\\+|00)33[\\s.-]{0,3}(?:\\(0\\)[\\s.-]{0,3})?|0)[1-9](?:(?:[\\s.-]?\\d{2}){4}|\\d{2}(?:[\\s.-]?\\d{3}){2})$/;\n\n  formInfos = new FormGroup({\n    firstName : new FormControl('', [Validators.required, Validators.minLength(2), Validators.maxLength(50) ]),\n    lastName : new FormControl('', [Validators.required, Validators.minLength(2), Validators.maxLength(50)]),\n    phone: new FormControl('', [Validators.pattern(this.phoneRegex)]),\n    address: new FormControl('', [Validators.required, Validators.minLength(2)]),\n    city: new FormControl('', [Validators.required, Validators.minLength(2)]),\n    zip: new FormControl('', [Validators.required, Validators.minLength(2)]),\n  });\n\n  formPassword = new FormGroup({\n    password: new FormControl('', [Validators.required,Validators.minLength(8), Validators.pattern(this.passwordRegex)]),\n    confPassword: new FormControl('', [Validators.required]),\n  },{\n    validators : this.mustMatch('password' ,'confPassword')\n  });\n\n  get fInfos(){\n    return this.formInfos.controls;\n  }\n\n  get fPassword(){\n    return this.formPassword.controls;\n  }\n\n  mustMatch(controlName : string, matchingControlName : string) : ValidatorFn{\n      return (formGroup : FormGroup) : ValidationErrors=>{\n        const control = formGroup.controls[controlName];\n        const matchingControl = formGroup.controls[matchingControlName];\n        if (matchingControl.errors && !matchingControl.errors.mustMatch){\n          return\n        }\n        if(control.value !== matchingControl.value){\n          matchingControl.setErrors({mustMatch:true});\n        }\n        else{\n          matchingControl.setErrors(null)\n        }\n      }\n  }\n\n\n  onSubmitInfos(form : NgForm){\n    const url = 'api/user/me';\n    var send =true;\n\n    if (send==true){\n      const body  = {\n          nom: form.value.lastName,\n          prenom: form.value.firstName,\n//          phone: form.value.phone,\n          address: form.value.address,\n          city: form.value.city,\n          zipCode: form.value.zip,\n      }\n      this.httpClient\n      .put(url, body )\n      .toPromise()\n      .then(\n        (res : any) => {\n            alert(res.msg);\n        },\n        (error) => {\n          alert(error.error.error);\n        }\n      )\n    }\n  }\n\n  onSubmitEmail(form : NgForm){\n    const url = 'api/user/email';\n    var send =true;\n\n    if (send==true){\n      const body  = {\n          email: form.value.email,\n          password: form.value.password,\n      }\n      this.httpClient\n      .put(url, body )\n      .toPromise()\n      .then(\n        (res : any) => {\n            alert(res.msg);\n        },\n        (error) => {\n          alert(error.error.error);\n        }\n      )\n    }\n  }\n\n  onSubmitPassword(form : NgForm){\n    const url = 'api/user/me';\n    var send =true;\n\n    if (send==true){\n      const body  = {\n        oldPassword: form.value.oldPassword,\n        newPassword: form.value.newPassword,\n        confNewPassword: form.value.confNewPassword,\n      }\n      this.httpClient\n      .put(url, body )\n      .toPromise()\n      .then(\n        (res : any) => {\n            alert(res.msg);\n        },\n        (error) => {\n          alert(error.error.error);\n        }\n      )\n    }\n  }\n\n  submitInfos(){\n    const url = 'api/user/me';\n\n      const body  = {\n          nom: this.formInfos.value.lastName,\n          prenom: this.formInfos.value.firstName,\n          phoneNumber: this.formInfos.value.phone,\n          address: this.formInfos.value.address,\n          city: this.formInfos.value.city,\n          zipCode: this.formInfos.value.zip,\n      }\n      this.httpClient\n      .put(url, body )\n      .toPromise()\n      .then(\n        (res : any) => {\n          var title : \"Message de confirmation\";\n          var content = \"Vos informations ont bien été mises à jour\";\n          var link = '/client_home';\n          this.openDialog(\"Message de confirmation\", content, link);\n        },\n        (error) => {\n          var title = 'Erreur'\n          var content = error.error.error;\n          var link = '/client_infos_profil';\n          this.openDialog('Erreur', content, link);\n        }\n      )\n\n  }\n\n  submitPassword(){\n    const url = 'api/user/pwd/me';\n    var send =true;\n\n    if (send==true){\n      const body  = {\n        // oldPassword: form.value.oldPassword,\n        password: this.formPassword.value.password,\n        password_confirm: this.formPassword.value.confPassword,\n      }\n      this.httpClient\n      .put(url, body )\n      .toPromise()\n      .then(\n        (res : any) => {\n          var title : 'Message de confirmation';\n          var content = \"Le mot de passe a bien été mis à jour\";\n          var link = '/client_home';\n          this.openDialog('Message de confirmation', content, link);\n        },\n        (error) => {\n          var title = 'Erreur'\n          var content = error.error.error;\n          var link = '/client_infos_profil';\n          this.openDialog('Erreur', content, link);\n        }\n      )\n    }\n  }\n\n  openDialog(title : String, content : String, link : String) {\n    this.dialog.open(PopUpComponent, {\n      width: '50%',\n      data: {\n        title: title,\n        content: content,\n        link : link\n      }\n    });\n  }\n\n}\n","\n\n\n\n\n\n<app-header-client></app-header-client>\n<div class=\"row brd-top-1 brd-btm-1 no-gutters\" *ngIf=\"user$ | async as user\">\n  <div class=\"d-md-block d-none col-md-3 col-lg-2\">\n    <app-sidebar></app-sidebar>\n  </div>\n  <div class=\"col col-md-9 col-lg-10 no-gutters\">\n    <div class=\"row no-gutters\">\n      <div class=\"col-12 col-lg-6 no-gutters\">\n        <form class=\"w mx-auto\" [formGroup]=\"formInfos\" (ngSubmit)=\"submitInfos()\">\n          <p class=\"t-1\">Mes informations générales</p>\n          <!-- <select class=\"w-100 mb-3\" name=\"gendre\" required [ngModel]=\"user.gender\">\n            <option value=\"Choice\">Civilité *</option>\n            <option value=\"Mr\">Monsieur</option>\n            <option value=\"Mme\">Madame</option>\n          </select> -->\n          <!-- <div class=\"mb-3\">\n              <select\n                  formControlName=\"gender\"\n                  class=\"w-100\"\n                  id=\"gender\"\n                  type=\"text\"\n                  [ngClass]=\"{'invalid-input' : f.gender.touched && f.gender.invalid}\"\n                  required>\n                  <option value=\"\" selected hidden disabled>Civilité *</option>\n                  <option value=\"monsieur\">Monsieur</option>\n                  <option value=\"madame\">Madame</option>\n              </select>\n              <div *ngIf=\"f.gender.touched && f.gender.invalid\" class=\"pa-3 mt-1 ml-2\">\n                  <div *ngIf=\"f.gender.errors.required\">Veuillez sélectionner votre gendre</div>\n              </div>\n          </div> -->\n\n          <div class=\"mb-3\">\n              <input\n                  formControlName=\"lastName\"\n                  class=\"w-100\"\n                  id=\"lastName\"\n                  type=\"text\"\n                  placeholder=\"Nom *\"\n                  [ngModel]=\"user.last_name\"\n                  [ngClass]=\"{'invalid-input' : fInfos.lastName.touched && fInfos.lastName.invalid}\">\n              <div *ngIf=\"fInfos.lastName.touched && fInfos.lastName.invalid\" class=\"pa-3 mt-1 ml-2\">\n                  <div *ngIf=\"fInfos.lastName.errors.required\">Le nom est obligatoire</div>\n                  <div *ngIf=\"fInfos.lastName.errors.minlength\">Le nom doit contenir 4 caratères minimum</div>\n                  <div *ngIf=\"fInfos.lastName.errors.maxlength\">Le nom doit contenir 50 caratères maximum</div>\n              </div>\n          </div>\n\n          <div class=\"mb-3\">\n              <input\n                  formControlName=\"firstName\"\n                  class=\"w-100\"\n                  id=\"firstName\"\n                  type=\"text\"\n                  placeholder=\"Prenom *\"\n                  [ngModel]=\"user.first_name\"\n                  [ngClass]=\"{'invalid-input' : fInfos.firstName.touched && fInfos.firstName.invalid}\">\n              <div *ngIf=\"fInfos.firstName.touched && fInfos.firstName.invalid\" class=\"pa-3 mt-1 ml-2\">\n                  <div *ngIf=\"fInfos.firstName.errors.required\">Le prénom est obligatoire</div>\n                  <div *ngIf=\"fInfos.firstName.errors.minlength\">Le prénom doit contenir 4 caratères minimum</div>\n                  <div *ngIf=\"fInfos.firstName.errors.maxlength\">Le prénom doit contenir 50 caratères maximum</div>\n              </div>\n          </div>\n          <!-- <div class=\"mb-3\">\n              <input\n                  formControlName=\"email\"\n                  class=\"w-100\"\n                  id=\"email\"\n                  type=\"email\"\n                  placeholder=\"Email *\"\n                  [ngClass]=\"{'invalid-input' : f.email.touched && f.email.invalid}\">\n              <div *ngIf=\"f.email.touched && f.email.invalid\" class=\"pa-3 mt-1 ml-2\">\n                  <div *ngIf=\"f.email.errors.required\">L'email est obligatoire</div>\n                  <div *ngIf=\"f.email.errors.email\">Veuillez entrer une adresse email valide</div>\n              </div>\n          </div> -->\n          <div class=\"mb-3\">\n              <input\n                  formControlName=\"phone\"\n                  class=\"w-100\"\n                  id=\"phone\"\n                  type=\"phone\"\n                  placeholder=\"Phone\"\n                  [ngModel]=\"user.phoneNumber\"\n                  [ngClass]=\"{'invalid-input' : fInfos.phone.touched && fInfos.phone.invalid}\">\n              <div *ngIf=\"fInfos.phone.touched && fInfos.phone.invalid\" class=\"pa-3 mt-1 ml-2\">\n                  <div *ngIf=\"fInfos.phone.invalid\">Le numéro de téléphone est invalide</div>\n              </div>\n          </div>\n          <div class=\"mb-3\">\n              <input\n                  formControlName=\"address\"\n                  id=\"address\"\n                  class=\"w-100\"\n                  type=\"text\"\n                  placeholder=\"Adresse *\"\n                  [ngModel]=\"user.address\"\n                  [ngClass]=\"{'invalid-input' : fInfos.address.touched && fInfos.address.invalid }\">\n              <div *ngIf=\"fInfos.address.touched && fInfos.address.invalid\" class=\"pa-3 mt-1 ml-2\">\n                  <div *ngIf=\"fInfos.address.errors.required\">Ce champs est obligatoire</div>\n              </div>\n          </div>\n          <div class=\"row no-gutters mb-3\">\n            <div class=\"col g-1\">\n              <div class=\"mb-3\">\n                  <input\n                      formControlName=\"zip\"\n                      id=\"zip\"\n                      class=\"w-100\"\n                      type=\"text\"\n                      placeholder=\"Code postale *\"\n                      [ngModel]=\"user.zipCode\"\n                      [ngClass]=\"{'invalid-input' : fInfos.zip.touched && fInfos.zip.invalid }\">\n                  <div *ngIf=\"fInfos.zip.touched && fInfos.zip.invalid\" class=\"pa-3 mt-1\">\n                      <div *ngIf=\"fInfos.zip.errors.required\">Ce champs est obligatoire</div>\n                  </div>\n              </div>\n            </div>\n            <div class=\"col g-1\">\n              <div class=\"mb-3\">\n                  <input\n                      formControlName=\"city\"\n                      id=\"city\"\n                      class=\"w-100\"\n                      type=\"text\"\n                      placeholder=\"Ville *\"\n                      [ngModel]=\"user.city\"\n                      [ngClass]=\"{'invalid-input' : fInfos.city.touched && fInfos.city.invalid }\">\n                  <div *ngIf=\"fInfos.city.touched && fInfos.city.invalid\" class=\"pa-3 mt-1 \">\n                      <div *ngIf=\"fInfos.city.errors.required\">Ce champs est obligatoire</div>\n                  </div>\n              </div>\n            </div>\n          </div>\n\n          <button type=\"submit\" [disabled]=\"formInfos.invalid\" class=\"btn-2 mb-4\" >Enregister les modifications</button>\n          <p class=\"pa-2 mb-5\">\n            Utilisation de vos données personnelles : <br>\n            Les données personnelles communiquées lors de la création de votre compte ou par la suite à l’occasion de l’utilisation de nos produits et services sont destinées à TheTipTop.  Elles seront utilisées pour : <br>\n            - \tVous fournir les services demandés, <br>\n            -\tNous permettre de comprendre vos besoins et préférences, afin de poursuivre notre intérêt légitime d’établir votre profil de client pour vous adresser des offres que nous estimons susceptibles de vous intéresser, effectuer des analyses et statistiques commerciales pour organiser des activités promotionnelles et des concours, <br>\n            -\tAfficher dans le respect de vos choix en matière de cookies de la publicité ciblée sur notre site ainsi que sur d’autres sites. <br>\n            Pour connaître nos pratiques en matière de collecte, utilisation et communication de vos données personnelles, exercer vos droits, d’accès, de rectification et de suppression, modifier vos options en matière de prospection commerciale ou organiser le sort de vos données post-mortem, et connaître les autres droits dont vous disposez, veuillez lire notre Charte protection des données et cookies. <br>\n          <p>\n        </form>\n      </div>\n      <div class=\"col-12 col-lg-6 no-gutters brd-left-1\">\n        <!-- <form class= \"w mx-auto\" (ngSubmit)=\"onSubmitEmail(fEmail)\" #fEmail='ngForm'>\n          <p class=\"t-1\">Mon adresse email</p>\n          <p class=\"pa-1\">Connectez-vous pour connaître vos gains ou voir la liste de ce que vous avez déjà remporté. </p>\n          <input type=\"email\" class=\"w-100 mb-3\" id=\"email\" name=\"email\" placeholder=\"Nouvelle adresse mail\" aria-describedby=\"emailHelp\" ngModel required>\n          <input type=\"password\" class=\"w-100 mb-3\" id=\"password\" name =\"password\" placeholder=\"Mot de passe *\" ngModel required>\n          <p class=\"\" *ngIf=\"passwordIncorrect\">Email ou mot de passe incorrect !  </p>\n          <button type=\"submit\" class=\"btn-2\" [disabled]=\"fEmail.invalid\">Valider</button>\n        </form> -->\n\n        <form class= \"w mx-auto\" [formGroup]=\"formPassword\" (ngSubmit)=\"submitPassword()\">\n          <p class=\"t-1\">Mon mot de passe</p>\n          <!-- <input type=\"password\" class=\"w-100 mb-3\" id=\"oldPassword\" name=\"oldPassword\" placeholder=\"Mot de passe actuel\" aria-describedby=\"passwordHelp\" ngModel required> -->\n          <div class=\"mb-3\">\n              <input\n                  formControlName=\"password\"\n                  id=\"password\"\n                  class=\"w-100\"\n                  type=\"password\"\n                  placeholder=\"Mot de passe *\"\n                  [ngClass]=\"{'invalid-input' : fPassword.password.touched && fPassword.password.invalid }\">\n              <div *ngIf=\"fPassword.password.touched && fPassword.password.invalid\" class=\"pa-3 mt-1 ml-2\">\n                  <div *ngIf=\"fPassword.password.errors.required\">Le mot de passe est obligatoire</div>\n                  <div *ngIf=\"fPassword.password.invalid\">Le mot de passe doit contenir 8 charactères minimum : 1 lettre, 1 chiffre et 1 charactère spécial </div>\n              </div>\n          </div>\n          <div class=\"mb-3\">\n              <input\n                  formControlName=\"confPassword\"\n                  id=\"confPassword\"\n                  class=\"w-100\"\n                  type=\"password\"\n                  placeholder=\"Confirmation du mot de passe *\"\n                  [ngClass]=\"{'invalid-input' : fPassword.confPassword.touched && fPassword.confPassword.invalid }\">\n              <div *ngIf=\"fPassword.confPassword.touched && fPassword.confPassword.invalid\" class=\"pa-3 mt-1 ml-2\">\n                  <div *ngIf=\"fPassword.confPassword.errors.required\">Veuillez confirmer le mot de passe</div>\n                  <div *ngIf=\"fPassword.confPassword.errors.mustMatch\">Les deux mots de passe ne sont pas identiques</div>\n              </div>\n          </div>\n          <button type=\"submit\" [disabled]=\"formPassword.invalid\" class=\"btn-2 mb-5\" >Valider</button>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n<app-re-connect *ngIf=\"!user$\"></app-re-connect>\n<app-footer></app-footer>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { HttpParams } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-mail-password-sent',\n  templateUrl: './mail-password-sent.component.html',\n  styleUrls: ['./mail-password-sent.component.scss']\n})\nexport class MailPasswordSentComponent implements OnInit {\n\n  @Input() email = this.route.snapshot.paramMap.get('email') ;\n  constructor(\n    private route : ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header></app-header>\n<div class=\"brd-top-1 brd-btm-1 pb-5\">\n  <form class= 'mb-5 w mx-auto'>\n    <p class=\"t-1\">Le mail a bien été envoyé</p>\n    <div class=\"pa-1\">Le lien de réinitialisation de mot de passe a été envoyer à l'adresse email : <div class=\"font-italic font-weight-bold\">{{email}}</div>\n      Quand vous cliquez dessus vous serez dirigé(e) à la page de réinitialisation de votre mot de passe</div>\n  </form>\n</div>\n<app-footer></app-footer>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../models/User';\nimport { Ticket } from \"../models/Ticket\";\nimport { environment } from '../../environments/environment';\n\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  @Input() user$ : Observable<User> ;\n  Ticket;\n\n  constructor(\n    private httpClient : HttpClient\n  ) { }\n\n  ngOnInit(): void {\n    var url = environment.apiUrl+\"/user/me\";\n    this.user$ = this.httpClient.get<User>(url);\n  }\n\n  onSubmit (ngForm : NgForm){\n\n  }\n\n}\n","<app-header-client></app-header-client>\n<div class=\"row no-gutters brd-top-1 brd-btm-1\">\n  <div class=\"d-md-block d-none col-md-3 col-lg-2\">\n    <app-sidebar></app-sidebar>\n  </div>\n  <div class=\"col-12 col-md-9 col-lg-10 no-gutters\">\n    <div class=\"m-3 mt-5\" *ngIf=\"user$ | async as user\">\n      <div class=\"d-felx text-lg-left text-center\">\n        <p class=\"t-1 mx-auto\">Bonjour {{user.last_name}}, bienvenue dans votre espace client.</p>\n      </div>\n      <!-- <div class=\"d-felx\">\n        <form class=\"mx-auto\" (ngSubmit)=\"onSubmit(f)\" #f='ngForm'>\n          <p class=\"pa-1 text-lg-left text-center\">Renseigner votre nouveau code de 10 chiffres :</p>\n          <div class=\"text-lg-left text-center\">\n            <input type=\"code\" class=\"w-50 mr-2\" id=\"code\" name=\"code\" aria-describedby=\"codeHelp\" ngModel required>\n            <button type=\"submit\" class=\"btn-2 cursor-pointer\" [disabled]=\"f.invalid\">Valider</button>\n          </div>\n        </form>\n      </div> -->\n    </div>\n\n    <!-- <div class=\"d-lg-block d-none\">\n      <div class=\"m-5 no-gutters row\">\n        <div class=\"col-3\">\n          <div class=\"pa-1\">Votre code</div>\n          <div class=\"t-2\">\n            0564754290\n          </div>\n        </div>\n        <div class=\"col-4\">\n          <p class=\"pa-1 d-block \">Votre gain</p>\n          <div class=\"d-flex\">\n            <img src=\"../assets/images/coffret-1.png\" class=\"img\">\n          </div>\n        </div>\n        <div class=\"col-5 pl-5 d-flex flex-column\">\n          <p class=\" d-block clr-1\">Votre gaind</p>\n          <p class = \"pa-1\">Valeur du gain 69€</p>\n          <p class=\"t-1\">Coffret découverte Signatures</p>\n          <p class= \"pa-2\">Toutes les saveurs de nos thés signatures réunies\n            en un seul coffret découverte. </p>\n          <a class=\"nav-link text-dark underline-hover p-0 mt-auto\" href=\"#\">Voir le produit </a>\n        </div>\n      </div>\n    </div> -->\n\n    <!-- <div class=\"d-block d-lg-none \">\n      <div class=\"d-flex\"><div class = \"d-flex flex-collumn mx-auto text-align-center\">Votre code : <h5>&nbsp; 0564754290</h5></div></div>\n      <div class=\"d-flex\"><p class=\"t-1 mx-auto text-align-center\">Coffret découverte Signatures</p></div>\n      <div class=\"d-flex mb-3\">\n        <img src=\"../assets/images/coffret-1.png\" class=\"w-75 mx-auto\">\n      </div>\n      <div class=\"d-flex\"><p class = \"pa-1 mx-auto text-align-center\">Valeur du gain 69€</p></div>\n      <div class=\"d-flex\"><p class= \"pa-2 mx-auto text-align-center\">Toutes les saveurs de nos thés signatures réunies\n        en un seul coffret découverte. </p></div>\n      <div class=\"d-flex\"><a class=\"nav-link text-dark underline-hover p-0 mx-auto\" href=\"#\">Voir le produit </a></div>\n    </div> -->\n\n\n    <div class=\"mt-2 mb-3 pt-5\" style=\"overflow-x:auto;\">\n      <app-history></app-history>\n    </div>\n  </div>\n</div>\n<app-footer></app-footer>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:3000/api/v1'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filterPipe'\n})\nexport class FilterPipe implements PipeTransform {\n  transform(items: any, filter: any, isAnd: boolean): any {\n    if (filter && Array.isArray(items)) {\n      let filterKeys = Object.keys(filter);\n      if (isAnd) {\n        return items.filter(item =>\n            filterKeys.reduce((memo, keyName) =>\n                (memo && new RegExp(filter[keyName], 'gi').test(item[keyName])) || filter[keyName] === \"\", true));\n      } else {\n        return items.filter(item => {\n          return filterKeys.some((keyName) => {\n            console.log(keyName);\n            return new RegExp(filter[keyName], 'gi').test(item[keyName]) || filter[keyName] === \"\";\n          });\n        });\n      }\n    } else {\n      return items;\n    }\n  }\n}\n","import { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { Router ,CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthGuardAdmin implements CanActivate {\n  constructor ( private router :Router, private authService : AuthService) {}\n  canActivate (route : ActivatedRouteSnapshot, state : RouterStateSnapshot)\n    : Observable<boolean> | Promise<boolean> | boolean {\n      if (this.authService.getLoggedInStatus() && this.authService.getRole()=='admin'){\n        return true\n      }else{\n        this.router.navigate(['/admin_login']);\n        return false;\n      }\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nimport { environment } from '../../environments/environment';\n\n\n\n\n@Component({\n  selector: 'app-emp-login',\n  templateUrl: './emp-login.component.html',\n  styleUrls: ['./emp-login.component.scss']\n})\nexport class EmpLoginComponent implements OnInit {\n  incorrect = false;\n\n  constructor(\n    private httpClient : HttpClient,\n    private router : Router,\n    private authService : AuthService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit (form : NgForm){\n    const url = environment.apiUrl+'/employe/login/';\n    var send =true;\n\n    if (send==true){\n      const body  = {\n          email: form.value.email,\n          password: form.value.password,\n      }\n      this.httpClient\n      .post(url, body )\n      .toPromise()\n      .then(\n        (res : any) => {\n            this.authService.setLoggedInStatus(true);\n            this.authService.setUserId(res.userId);\n            this.authService.setEmail(res.email);\n            this.authService.setToken(res.token);\n            this.authService.setRole('employe');\n            this.router.navigate(['emp_home']);\n        },\n        (error) => {\n          alert(error.error.error);\n        }\n      )\n    }\n  }\n\n}\n","<app-header></app-header>\n<div class=\"brd-top-1 brd-btm-1\">\n  <form class= \"w mx-auto\" (ngSubmit)=\"onSubmit(f)\" #f='ngForm'>\n      <p class=\"t-1 mb-4\">Se connecter</p>\n      <div class=\"d-flex\" *ngIf=\"incorrect\">\n        <p class=\"pa-1 red\" >L’adresse email et/ou le mot de passe\n          sont incorrects, veuillez-les corriger ou créer un compte.  </p>\n      </div>\n      <p class=\"pa-1\">Saisir l'identifiant et le mot de passe pour accéder à votre espace employé</p>\n      <input type=\"email\" class=\"w-100 mb-4\" id=\"email\" name =\"email\" placeholder=\"Email\" ngModel required>\n      <input type=\"password\" class=\"w-100 mb-4\" id=\"password\" name =\"password\" placeholder=\"Mot de passe\" ngModel required>\n      <div class=\"d-flex mb-4\">\n        <div class=\"a-1 cursor-pointer ml-auto\" routerLink=\"/password_forgotten\" >Mot de passe oublié ?</div>\n      </div>\n      <button type=\"submit\" class=\"btn-2 mb-5\" [disabled]=\"f.invalid\">Valider</button>\n  </form>\n</div>\n<app-footer></app-footer>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-emp-stats',\n  templateUrl: './emp-stats.component.html',\n  styleUrls: ['./emp-stats.component.scss']\n})\nexport class EmpStatsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header-emp></app-header-emp>\n<div class=\"cont d-flex flex-row bd-highlight vh-100\">\n  <div class=\"left bd-highlight\">\n    <app-sidebar-emp></app-sidebar-emp>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators} from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PopUpComponent } from '../pop-up/pop-up.component';\nimport { environment } from '../../environments/environment';\n\n@Component({\n  selector: 'app-connexion',\n  templateUrl: './connexion.component.html',\n  styleUrls: ['./connexion.component.scss']\n})\nexport class ConnexionComponent implements OnInit {\n  error = false;\n  errorBody ='';\n  constructor(\n    private httpClient : HttpClient,\n    private router : Router,\n    private authService : AuthService,\n    public dialog: MatDialog\n  ) { }\n\n  ngOnInit(): void {\n  }\n  form = new FormGroup({\n    cEmail: new FormControl('', [Validators.required, Validators.email]),\n    cPassword: new FormControl('', [Validators.required]),\n  });\n\n  get f(){\n    return this.form.controls;\n  }\n\n  submit(){\n    const url = environment.apiUrl+'/user/login/';\n    const body  = {\n      email: this.form.value.cEmail,\n      password: this.form.value.cPassword,\n    }\n      this.httpClient\n      .post(url, body )\n      .toPromise()\n      .then(\n        (res : any) => {\n          this.authService.setLoggedInStatus(true);\n          this.authService.setUserId(res.userId);\n          this.authService.setEmail(res.email);\n          this.authService.setToken(res.token);\n          this.authService.setRole('user');\n          this.router.navigate(['client_home']);\n        },\n        (error) => {\n          this.error =true;\n          if (error.error.error == 'Utilisateur introuvable.'){\n            this.errorBody = \"Cet utilisateur n'existe pas !\";\n          }else if (error.error.error == 'Email ou mot de passe INVALIDE.'){\n            this.errorBody = \"Email ou mot de passe incorrect\";\n          }else{\n            var content = \"Une erreur est servenue, veuillez ressayer plus tard !\";\n            var link = '';\n            this.openDialog(content, link);\n          }\n        }\n      )\n    }\n\n    openDialog(content : String, link : String) {\n      this.dialog.open(PopUpComponent, {\n        width: '50%',\n        data: {\n          title: 'Erreur',\n          content: content,\n          link : link\n        }\n      });\n    }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"submit()\"  class=\"w mx-auto\">\n  <p class=\"t-1\">Se connecter</p>\n  <div class=\"d-flex\" *ngIf=\"error\">\n    <img class=\"icon mr-2\" src=\"../assets/img/exclamation.png\" alt=\"\">\n    <p class=\"pa-3\" >{{errorBody}}</p>\n  </div>\n  <p class=\"pa-1\">Connectez-vous pour connaître vos gains ou voir la liste de ce que vous avez déjà remporté. </p>\n\n  <div class=\"mb-3\">\n      <input\n          formControlName=\"cEmail\"\n          class=\"w-100\"\n          id=\"cEmail\"\n          type=\"text\"\n          placeholder=\"Email\"\n          [ngClass]=\"{'invalid-input' : f.cEmail.touched && f.cEmail.invalid}\">\n      <div *ngIf=\"f.cEmail.touched && f.cEmail.invalid\" class=\"pa-3 mt-1 ml-3\">\n          <div *ngIf=\"f.cEmail.errors.required\">L'email est obligatoire</div>\n          <div *ngIf=\"f.cEmail.errors.email\">Veuillez rentrer une adresse email valide</div>\n      </div>\n  </div>\n  <div class=\"mb-3\">\n      <input\n          formControlName=\"cPassword\"\n          id=\"cPassword\"\n          class=\"w-100\"\n          type=\"password\"\n          placeholder=\"Mot de passe\"\n          [ngClass]=\"{'invalid-input' : f.cPassword.touched && f.cPassword.invalid }\">\n      <div *ngIf=\"f.cPassword.touched && f.cPassword.invalid\" class=\"pa-3 mt-1 ml-3\">\n          <div *ngIf=\"f.cPassword.errors.required\">Le mot de passe est obligatoire</div>\n          <div *ngIf=\"f.cPassword.errors.minlength\">Le mot de passe doit contenir au minimum 8 caractères</div>\n      </div>\n  </div>\n\n  <div class=\"d-flex w-100\">\n    <a class=\"ml-auto nav-link text-dark underline-hover mb-4\" href=\"password_forgotten\" >Mot de passe oublié ?</a>\n  </div>\n  <button type=\"submit\" [disabled]=\"form.invalid\" class=\"btn-2\">Me connecter</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header-emp',\n  templateUrl: './header-emp.component.html',\n  styleUrls: ['./header-emp.component.scss']\n})\nexport class HeaderEmpComponent implements OnInit {\n\n  constructor(\n    private authService : AuthService,\n    private router : Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  seDeconnecter (){\n    this.authService.deconnexion();\n    this.router.navigate(['']);\n  }\n\n}\n","<nav class=\"navbar navbar-expand-md p-4 navbar-light\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" href=\"\">\n      <img class=\"img-fluid\" src=\"assets/img/logo-noir.png\">\n    </a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon text-dark\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse justify-content-end\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav align-items-center\">\n        <li class=\"nav-item ml-2 d-md-none\">\n          <a class=\"my-auto nav-link text-dark ml-2\" routerLink=\"/emp_home\">Recherche gain</a>\n        </li>\n        <li class=\"nav-item ml-2 d-md-none\">\n          <a class=\"my-auto nav-link text-dark ml-2\" routerLink=\"/emp_store\">Mon magasin</a>\n        </li>\n        <li class=\"nav-item ml-2 d-md-none\">\n          <a class=\"my-auto nav-link text-dark ml-2\" (click)=\"seDeconnecter()\">Deconnexion</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-logo-footer',\n  templateUrl: './logo-footer.component.html',\n  styleUrls: ['./logo-footer.component.scss']\n})\nexport class LogoFooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid d-flex py-5 brd-top-1\">\n  <img src=\"../assets/images/logo.png\"class=\"logo-noir my-auto\">\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.scss']\n})\nexport class LandingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>landing works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormControl, Validators, ValidatorFn, ValidationErrors } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PopUpComponent } from '../pop-up/pop-up.component';\nimport { Router } from '@angular/router';\nimport { environment } from '../../environments/environment';\n\n\n\n@Component({\n  selector: 'app-reinit-password',\n  templateUrl: './reinit-password.component.html',\n  styleUrls: ['./reinit-password.component.scss']\n})\nexport class ReinitPasswordComponent implements OnInit {\n\n  passwordRegex = /^(?=.*\\d)(?=.*[#$@!%&*?])[A-Za-z\\d#$@!%&*?]{8,}$/;\n  constructor(\n    private httpClient : HttpClient,\n    private route : ActivatedRoute,\n    private router : Router,\n    public dialog: MatDialog\n  ) { }\n\n  ngOnInit(): void {\n  }\n  form = new FormGroup({\n    password: new FormControl('', [Validators.required,Validators.minLength(8), Validators.pattern(this.passwordRegex)]),\n    confPassword: new FormControl('', [Validators.required]),\n  },{\n    validators : this.mustMatch('password' ,'confPassword'),\n  });\n\n  get f(){\n    return this.form.controls;\n  }\n\n  mustMatch(controlName : string, matchingControlName : string): ValidatorFn{\n      return (formGroup : FormGroup): ValidationErrors=>{\n        const control = formGroup.controls[controlName];\n        const matchingControl = formGroup.controls[matchingControlName];\n        if (matchingControl.errors && !matchingControl.errors.mustMatch){\n          return\n        }\n        if(control.value !== matchingControl.value){\n          matchingControl.setErrors({mustMatch:true});\n        }\n        else{\n          matchingControl.setErrors(null)\n        }\n      }\n  }\n\n  submit (){\n    const url = environment.apiUrl+'/user/restpwd/';\n    const id = this.route.snapshot.paramMap.get('id') ;\n    const token = this.route.snapshot.paramMap.get('token') ;\n    const body  = {\n      password: this.form.value.password,\n      password_confirm: this.form.value.confPassword,\n    }\n    console.log(url+id+'/'+token);\n\n    this.httpClient\n    .post(url+id+'/'+token, body )\n    .toPromise()\n    .then(\n      (res : any) => {\n        var content = \"Votre mot de passe a bien été modifié veuillez vous connecter\";\n        var link = 'register';\n        this.openDialog(content, link, 'Message de confirmation');\n      },\n      (error) => {\n        alert(error.error.error)\n        if (error.error.error==\"ce lien n'est plus valide....\" ||\n            error.error.error==\"cannot found user\" ||\n            error.error.error==\"Your token is not valid.\" ) {\n          var content = \"Ce lien n'est pas valide, veuillez de nouveau saisir votre adresse email.\";\n          var link = 'password_forgotten';\n          this.openDialog(content, link, 'Erreur');\n        }else{\n          var content = \"Une erreur est servenue, veuillez ressayer plus tard !\";\n          var link = '';\n          this.openDialog(content, link, 'Erreur');\n        }\n      }\n    )\n  }\n\n  openDialog(content : String, link : String, title : String) {\n    this.dialog.open(PopUpComponent, {\n      width: '50%',\n      data: {\n        title: title,\n        content: content,\n        link : link\n      }\n    });\n  }\n\n}\n","<app-header></app-header>\n<div class=\"brd-top-1 brd-btm-1\">\n  <form class= \"w mx-auto\" [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n      <p class=\"t-1 mb-4\">Nouveau mot de passe</p>\n      <p class=\"pa-1 mb-5\">Saisir l'adresse email associée à votre compte.\n                      Nous vous enverrons un lien par email pour réinitialiser\n                      votre mot de passe.</p>\n      <div class=\"mb-3\">\n          <input\n              formControlName=\"password\"\n              id=\"password\"\n              class=\"w-100\"\n              type=\"password\"\n              placeholder=\"Mot de passe *\"\n              [ngClass]=\"{'invalid-input' : f.password.touched && f.password.invalid }\">\n          <div *ngIf=\"f.password.touched && f.password.invalid\" class=\"pa-3 mt-1 ml-2 text-left\">\n              <div *ngIf=\"f.password.errors.required\">Le mot de passe est obligatoire</div>\n              <div *ngIf=\"f.password.invalid\">Le mot de passe doit contenir 8 charactères minimum : 1 lettre, 1 chiffre et 1 charactère spécial </div>\n          </div>\n      </div>\n      <div class=\"mb-4\">\n          <input\n              formControlName=\"confPassword\"\n              id=\"confPassword\"\n              class=\"w-100\"\n              type=\"password\"\n              placeholder=\"Confirmation du mot de passe *\"\n              [ngClass]=\"{'invalid-input' : f.confPassword.touched && f.confPassword.invalid }\">\n          <div *ngIf=\"f.confPassword.touched && f.confPassword.invalid\" class=\"pa-3 mt-1 ml-2 text-left\">\n              <div *ngIf=\"f.confPassword.errors.required\">Veuillez confirmer le mot de passe</div>\n              <div *ngIf=\"f.confPassword.errors.mustMatch\">Les deux mots de passe ne sont pas identiques</div>\n          </div>\n      </div>\n      <div class=\"d-flex mb-5\">\n        <button type=\"submit\" class=\"btn-2 mx-auto\" [disabled]=\"form.invalid\">Valider</button>\n      </div>\n  </form>\n</div>\n<app-footer></app-footer>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-emailing',\n  templateUrl: './emailing.component.html',\n  styleUrls: ['./emailing.component.scss']\n})\nexport class EmailingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  submit (){\n    \n  }\n}\n","<app-header-admin></app-header-admin>\n<div class=\"row no-gutters brd-top-1 brd-btm-1\">\n  <div class=\"d-md-block d-none col-md-3 col-lg-3\">\n    <app-sidebar-admin></app-sidebar-admin>\n  </div>\n  <div class=\"px-5 py-3\">\n    <form class= \"mr-auto\" (ngSubmit)=\"submit()\" #f='ngForm'>\n        <div class=\"t-1 mb-4\">Emailing</div>\n        <p class=\"pa-1 mb-5\">\n          Vous pouvez rédiger un mail et l'envoyer à tous les utilisateurs qui sont inscrits à la newsletter.\n        </p>\n        <input type=\"password\" class=\"w-100 mb-4\" id=\"password\" name =\"password\" placeholder=\"Objet\" ngModel required>\n        <textarea rows=\"8\" class=\"w-100 mb-5\" ngModel required></textarea>\n        <div class=\"d-flex mb-5\">\n          <button type=\"submit\" class=\"btn-2 mx-auto\" [disabled]=\"f.invalid\">Envoyer</button>\n        </div>\n    </form>\n  </div>\n</div>\n<app-footer></app-footer>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from \"@angular/router\";\n\nexport interface DialogData {\n  response: boolean;\n  title : string;\n  content: string;\n  link: string;\n}\n\n@Component({\n  selector: 'app-pop-up-delete',\n  templateUrl: './pop-up-delete.component.html',\n  styleUrls: ['./pop-up-delete.component.scss']\n})\nexport class PopUpDeleteComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<PopUpDeleteComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    private router : Router\n  ) {}\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 mat-dialog-title class='t-1'>{{data.title}}</h1>\n<div mat-dialog-content class='pa-1'>{{data.content}}</div>\n\n<div mat-dialog-actions class= \"d-flex flex-row-reverse bd-highlight\">\n  <mat-dialog-actions align=\"end\">\n    <button mat-button mat-dialog-close class='btn-1 ml-2'>\n      <svg>\n        <rect x=\"0\" y=\"0\" fill=\"none\" width=\"100%\" height=\"100%\"></rect>\n      </svg>\n      Annuler\n    </button>\n    <button mat-button [mat-dialog-close]=\"true\" class='btn-red-2 ml-2'>\n      Supprimer\n    </button>\n  </mat-dialog-actions>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class TokenInterceptorService implements HttpInterceptor{\n\n  constructor(private authService : AuthService) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    request = request.clone({\n      setHeaders: {\n        Authorization: 'Bearer '+this.authService.getToken()\n      }\n    });\n    return next.handle(request);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PopUpDeleteComponent } from '../pop-up-delete/pop-up-delete.component';\nimport { PopUpComponent } from '../pop-up/pop-up.component';\n\n@Component({\n\n  selector: 'app-style-page',\n  templateUrl: './style-page.component.html',\n  styleUrls: ['./style-page.component.scss']\n})\n\nexport class StylePageComponent implements OnInit {\n  constructor(\n    public dialog: MatDialog\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  openDialogDelete() {\n    this.dialog.open(PopUpDeleteComponent, {\n      width: '50%',\n      data: {\n        title: 'titre',\n        content: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n        link : 'register'\n      }\n    });\n  }\n\n  openDialog() {\n    this.dialog.open(PopUpComponent, {\n      width: '50%',\n      data: {\n        title: 'titre',\n        content: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n        link : 'register'\n      }\n    });\n  }\n\n}\n","<app-header></app-header>\n<div class=\"container-fluid mx-auto text-center m-5 brd-top-1\">\n  <br><br><br>\n  <div class=\"t-1\">\n    Coffret découverte Signatures\n  </div>\n  <br><br><br>\n  <div class=\"t-2\">\n    Coffret découverte Signatures\n  </div><br>\n\n  <div class=\"pa-1\">\n    Coffret découverte Signatures\n  </div><br>\n  <div class=\"pa-2\">\n    Coffret découverte Signatures\n  </div><br>\n  <div class=\"pa-3\">\n    Coffret découverte Signatures\n  </div><br>\n  <a class=\"a-1\">\n    Coffret découverte Signatures\n  </a>\n  <br><br>\n  <div class=\"bg-clr-2 p-5\">\n    <a class=\"a-2 \">\n      Coffret découverte Signatures\n    </a>\n  </div>\n  <br>\n  <button mat-button (click)=\"openDialogDelete()\" class=\"btn-3\">\n    <svg>\n      <rect x=\"0\" y=\"0\" fill=\"none\" width=\"100%\" height=\"100%\"></rect>\n    </svg>\n    Supprimer\n  </button>\n  <br><br>\n  <button class=\"btn-1\">\n    <svg>\n      <rect x=\"0\" y=\"0\" fill=\"none\" width=\"100%\" height=\"100%\"></rect>\n    </svg>\n    Valider\n  </button>\n  <br><br>\n  <button class=\"btn-2\">\n    Valider\n  </button>\n  <br><br>\n  <div class=\"bg-clr-2 p-5\">\n    <button class=\"btn-4\" mat-button (click)=\"openDialog()\">\n      <svg>\n        <rect x=\"0\" y=\"0\" fill=\"none\" width=\"100%\" height=\"100%\"></rect>\n      </svg>\n      Pop up\n    </button>\n  </div>\n\n  <br><br>\n  <select required>\n    <option value=\"\" disabled selected hidden>Genre*</option>\n    <option value=\"Madame\">Madame</option>\n    <option value=\"Monisueur\">Monsieur</option>\n  </select>\n  <br><br>\n  <input placeholder=\"Email\">\n  <br><br>\n  <input class=\"invalid-input\" placeholder=\"Email\">\n</div>\n\n<br><br>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-index-view',\n  templateUrl: './index-view.component.html',\n  styleUrls: ['./index-view.component.scss']\n})\nexport class IndexViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header></app-header>\n\n<div class=\"my-3 p-5 brd-btm-1 brd-top-1\">\n  <a class=\"mt-4 mb-5\" href=\"/landing\">Landing Page</a><br>\n  <a class=\"mt-4 mb-5\" href=\"/register\">S'inscrir/login</a><br>\n  <a class=\"mb-5\" href=\"/validation\">validation de compte </a><br>\n  <a class=\"mb-5\" href=\"/password_forgotten\">mot de passe oublier </a><br>\n  <a class=\"mb-5\" href=\"/reinit_password/token\">réinitialisation mot de passe</a><br>\n  <a class=\"mb-5\" href=\"/client_infos_profil\">page profil client</a><br>\n  <a class=\"mb-5\" href=\"/client_home\">page d'accueil client</a><br>\n  <a class=\"mb-5\" href=\"/emp_home\">page d'accueil employé</a><br>\n  <a class=\"mb-5\" href=\"/emp_stats\">employé : page de stats</a><br>\n  <a class=\"mb-5\" href=\"/emp_login\">login employé</a><br>\n  <a class=\"mb-5\" href=\"/admin_login\">login admin</a><br>\n  <a class=\"mb-5\" href=\"/admin_home\">admin home : contient les stats</a><br>\n  <a class=\"mb-5\" href=\"/admin_new_emp\">admin : créer un nouveau profil employé</a><br>\n  <a class=\"mb-5\" href=\"/admin_modify_emp/id_employe\">admin : modifier un profil employé</a><br>\n  <a class=\"mb-5\" href=\"/admin_list_emp\">admin : liste des emplyés</a><br>\n</div>\n\n<app-footer></app-footer>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header-admin',\n  templateUrl: './header-admin.component.html',\n  styleUrls: ['./header-admin.component.scss']\n})\nexport class HeaderAdminComponent implements OnInit {\n\n  constructor(\n    private authService : AuthService,\n    private router : Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  seDeconnecter (){\n    this.authService.deconnexion();\n    this.router.navigate(['']);\n  }\n}\n","<nav class=\"navbar navbar-expand-md p-4 navbar-light\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" href=\"\">\n      <img class=\"img-fluid\" src=\"assets/img/logo-noir.png\">\n    </a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon text-dark\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse justify-content-end\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav align-items-center\">\n        <li class=\"nav-item ml-2 d-md-none\">\n          <a class=\"my-auto nav-link text-dark ml-2\" routerLink=\"/history\">Voir les statistique</a>\n        </li>\n        <li class=\"nav-item ml-2 d-md-none\">\n          <a class=\"my-auto nav-link text-dark ml-2\" routerLink=\"/admin_new_emp\">Créer un compte employé</a>\n        </li>\n        <li class=\"nav-item ml-2 d-md-none\">\n          <a class=\"my-auto nav-link text-dark ml-2\" routerLink=\"/admin_list_emp\">Gérer les comptes employés</a>\n        </li>\n        <li class=\"nav-item ml-2 d-md-none\">\n          <a class=\"my-auto nav-link text-dark ml-2\" routerLink=\"/admin_list_users\">Gérer les comptes utilisateurs</a>\n        </li>\n        <li class=\"nav-item ml-2 d-md-none\">\n          <a class=\"nav-link text-dark underline-hover\" (click)=\"seDeconnecter()\">Déconnexion</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Front';\n}\n","<router-outlet></router-outlet>\n<app-landing-page hidden></app-landing-page>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Employe } from '../models/Employe';\nimport { ActivatedRoute } from '@angular/router';\nimport { environment } from '../../environments/environment';\n\n\n\n@Component({\n  selector: 'app-admin-modify-emp',\n  templateUrl: './admin-modify-emp.component.html',\n  styleUrls: ['./admin-modify-emp.component.scss']\n})\nexport class AdminModifyEmpComponent implements OnInit {\n  @Input() employe$ : Observable<Employe> ;\n  employe : Employe;\n  passwordIncorrect = false;\n  passwordNotIdenticals =false;\n  constructor(\n    private httpClient : HttpClient,\n    private route : ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n\n    // var url = \"api/user/me\";\n    // this.user$ = this.httpClient.get<User>(url);\n    // this.httpClient\n    // .get<User>(url)\n    // .toPromise()\n    // .then(\n    //   (res : User) => {\n    //       this.user$ = res;\n    //   },\n    //   (error) => {\n    //     alert(error.error.error);\n    //   }\n    // )\n  }\n\n  onSubmitInfos(form : NgForm){\n    const url = environment.apiUrl+'/user/admin/employe/';\n    const id = this.route.snapshot.paramMap.get('id_emp') ;\n    var send =true;\n\n    if (send==true){\n      const body  = {\n          nom: form.value.lastName,\n          prenom: form.value.firstName,\n          email: form.value.email\n          //magasin: form.value.store,\n      }\n      this.httpClient\n      .put(url+id, body )\n      .toPromise()\n      .then(\n        (res : any) => {\n            alert(res.msg);\n        },\n        (error) => {\n          alert(error.error.error);\n        }\n      )\n    }\n  }\n\n  onSubmitPassword(form : NgForm){\n    const url = environment.apiUrl+'/user/admin/employe/';\n    const id = this.route.snapshot.paramMap.get('id_emp') ;\n    var send =true;\n\n    if (send==true){\n      const body  = {\n        oldPassword: form.value.oldPassword,\n        newPassword: form.value.newPassword,\n        confNewPassword: form.value.confNewPassword,\n      }\n      this.httpClient\n      .put(url+id, body )\n      .toPromise()\n      .then(\n        (res : any) => {\n            alert(res.msg);\n        },\n        (error) => {\n          alert(error.error.error);\n        }\n      )\n    }\n  }\n\n}\n","<!-- <app-header-admin></app-header-admin>\n<div class=\"cont d-flex flex-row bd-highlight\">\n  <div class=\"left bd-highlight\">\n    <app-sidebar-admin></app-sidebar-admin>\n  </div>\n  <div class=\"middle bd-highlight \">\n    <a class=\"a-1 d-flex mt-4\" href=\"#\">Revenir à la liste</a>\n    <p class=\"t-1\">Mes informations générales</p>\n    <form class=\"\" (ngSubmit)=\"onSubmitInfos(fInfos)\" #fInfos='ngForm'>\n\n      <input type=\"text\" class=\"\" id=\"lastName\" name=\"lastName\" placeholder =\"Nom *\"  required [ngModel]=\"employe.prenom\">\n      <input type=\"text\" class=\"\" id=\"firstName\" name=\"firstName\" placeholder =\"Prénom *\" required [ngModel]=\"employe.nom\">\n      <input type=\"text\" class=\"\" id=\"email\" name=\"email\" placeholder=\"Email\" required [ngModel]=\"employe.email\">\n      <select class=\"\" name=\"store\" required [ngModel]=\"employe.store\">\n        <option value=\"paris\">Paris</option>\n        <option value=\"nice\">Nice</option>\n        <option value=\"nice\">Nice</option>\n      </select>\n      <button type=\"submit\" class=\"btn-2 btn-large me-3\" [disabled]=\"fInfos.invalid\">Enregister les modifications</button>\n      <!-- <button type=\"submit\" class=\"btn-1 btn-small\" [disabled]=\"fInfos.invalid\">Supprimer le profil</button> -->\n    <!-- </form>\n\n  </div>\n  <div class=\"right bd-highlight\">\n    <p class=\"t-1\">Mon mot de passe</p>\n    <form (ngSubmit)=\"onSubmitPassword(fPassword)\" #fPassword='ngForm'>\n        <input type=\"password\" class=\"\" id=\"oldPassword\" name=\"oldPassword\" placeholder=\"Mot de passe actuel\" aria-describedby=\"passwordHelp\" ngModel required>\n        <input type=\"password\" class=\"\" id=\"newPassword\" name =\"newPassword\" placeholder=\"Nouveau mot de passe\" ngModel required>\n        <input type=\"password\" class=\"\" id=\"confNewPassword\" name =\"confNewPassword\" placeholder=\"Confirmation du nouveau mot de passe\" ngModel required>\n        <p class=\"\" *ngIf=\"passwordIncorrect\">Email ou mot de passe incorrect !  </p>\n        <p class=\"\" *ngIf=\"passwordNotIdenticals\">Email ou mot de passe incorrect !  </p>\n      <button type=\"submit\" class=\"btn-2\" [disabled]=\"fPassword.invalid\">Enregister</button>\n    </form>\n  </div>\n</div>\n<app-footer></app-footer> --> -->\n","import { Component, OnInit, Input } from '@angular/core';\nimport { HttpParams } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\n\n\n@Component({\n  selector: 'app-register-confirmation',\n  templateUrl: './register-confirmation.component.html',\n  styleUrls: ['./register-confirmation.component.scss']\n})\nexport class RegisterConfirmationComponent implements OnInit {\n  @Input() email = this.route.snapshot.paramMap.get('email') ;\n\n  constructor(\n    private route : ActivatedRoute\n\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header></app-header>\n<div class=\"brd-top-1 brd-btm-1 pb-5\">\n  <form class= 'mb-5 w mx-auto'>\n    <p class=\"t-1\">Votre compte a été bien créé</p>\n    <div class=\"pa-1\">Un mail de confirmation a été envoyer à l'adresse email : <div class=\"font-italic font-weight-bold\">{{email}}</div>\n      Veuillez aller à votre adersse mail pour confirmer la création du compte en cliquant sur le lien de validation</div>\n  </form>\n</div>\n<app-footer></app-footer>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators} from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PopUpComponent } from '../pop-up/pop-up.component';\nimport { environment } from '../../environments/environment';\n\n\n@Component({\n  selector: 'app-admin-login',\n  templateUrl: './admin-login.component.html',\n  styleUrls: ['./admin-login.component.scss']\n})\nexport class AdminLoginComponent implements OnInit {\n  error = false;\n  errorBody ='';\n  constructor(\n    private httpClient : HttpClient,\n    private router : Router,\n    private authService : AuthService,\n    public dialog: MatDialog\n  ) { }\n\n  ngOnInit(): void {\n  }\n  form = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required]),\n  });\n\n  get f(){\n    return this.form.controls;\n  }\n\n  submit(){\n    const url = environment.apiUrl+'/user/login/';\n    const body  = {\n      email: this.form.value.email,\n      password: this.form.value.password,\n    }\n      this.httpClient\n      .post(url, body )\n      .toPromise()\n      .then(\n        (res : any) => {\n          this.authService.setLoggedInStatus(true);\n          this.authService.setUserId(res.userId);\n          this.authService.setEmail(res.email);\n          this.authService.setToken(res.token);\n          this.authService.setRole('admin');\n          this.router.navigate(['admin_home']);\n        },\n        (error) => {\n          if (error.error.error == 'Utilisateur introuvable.'){\n            this.error =true;\n            this.errorBody = \"Cet utilisateur n'existe pas !\";\n          }else if (error.error.error == 'Email ou mot de passe INVALIDE.'){\n            this.error =true;\n            this.errorBody = \"Email ou mot de passe incorrect\";\n          }else{\n            var content = \"Une erreur est servenue, veuillez ressayer plus tard !\";\n            var link = '';\n            this.openDialog(content, link);\n          }\n        }\n      )\n    }\n\n    openDialog(content : String, link : String) {\n      this.dialog.open(PopUpComponent, {\n        width: '50%',\n        data: {\n          title: 'Erreur',\n          content: content,\n          link : link\n        }\n      });\n    }\n}\n\n\n\n\n// import { Component, OnInit } from '@angular/core';\n// import { NgForm } from '@angular/forms';\n// import { HttpClient } from '@angular/common/http';\n// import { AuthService } from '../services/auth.service';\n// import { Router } from '@angular/router';\n//\n// @Component({\n//   selector: 'app-admin-login',\n//   templateUrl: './admin-login.component.html',\n//   styleUrls: ['./admin-login.component.scss']\n// })\n// export class AdminLoginComponent implements OnInit {\n//   incorrect = false;\n//\n//   constructor(\n//     private httpClient : HttpClient,\n//     private authService : AuthService,\n//     private router : Router\n//   ) { }\n//\n//   ngOnInit(): void {\n//   }\n//\n//   onSubmit (form : NgForm){\n//     const url = environment.apiUrl+'/user/login/';\n//     var send =true;\n//\n//     if (send==true){\n//       const body  = {\n//           email: form.value.email,\n//           password: form.value.password,\n//       }\n//       this.httpClient\n//       .post(url, body )\n//       .toPromise()\n//       .then(\n//         (res : any) => {\n//             alert(res.msg);\n//             this.authService.setLoggedInStatus(true);\n//             this.authService.setUserId(res.userId);\n//             this.authService.setEmail(res.email);\n//             this.authService.setToken(res.token);\n//             this.authService.setRole('admin');\n//             this.router.navigate(['admin_home']);\n//         },\n//         (error) => {\n//           alert(error.error.error);\n//         }\n//       )\n//     }\n//   }\n//\n// }\n//\n//\n","<app-header></app-header>\n<div class=\"brd-top-1 brd-btm-1\">\n  <!-- <form class= \"w mx-auto\" (ngSubmit)=\"onSubmit(f)\" #f='ngForm'>\n      <p class=\"t-1 mb-4\">Se connecter</p>\n      <div class=\"d-flex\" *ngIf=\"incorrect\">\n        <p class=\"pa-3\" >L’adresse email et/ou le mot de passe\n          sont incorrects, veuillez-les corriger ou créer un compte.  </p>\n      </div>\n      <p class=\"pa-1\">Saisir l'identifiant et le mot de passe pour accéder à votre espace admin</p>\n      <input type=\"id\" class=\"w-100 mb-4\" id=\"id\" name =\"email\" placeholder=\"Email\" ngModel required>\n      <input type=\"password\" class=\"w-100 mb-4\" id=\"password\" name =\"password\" placeholder=\"Mot de passe\" ngModel required>\n      <div class=\"d-flex mb-4\">\n        <div class=\"a-1 cursor-pointer\" routerLink=\"/password_forgotten\">Mot de passe oublié ?</div>\n      </div>\n      <button type=\"submit\" class=\"btn-2 mb-5\" [disabled]=\"f.invalid\">Valider</button>\n  </form> -->\n  <form [formGroup]=\"form\" (ngSubmit)=\"submit()\"  class=\"w mx-auto\">\n    <p class=\"t-1 mb-4\">Se connecter</p>\n    <div class=\"d-flex\" *ngIf=\"error\">\n      <img class=\"icon mr-2\" src=\"../assets/img/exclamation.png\" alt=\"\">\n      <p class=\"pa-3\" >{{errorBody}}</p>\n    </div>\n\n    <div class=\"mb-4\">\n        <input\n            formControlName=\"email\"\n            class=\"w-100\"\n            id=\"email\"\n            type=\"text\"\n            placeholder=\"Email\"\n            [ngClass]=\"{'invalid-input' : f.email.touched && f.email.invalid}\">\n        <div *ngIf=\"f.email.touched && f.email.invalid\" class=\"pa-3 mt-1 ml-3\">\n            <div *ngIf=\"f.email.errors.required\">L'email est obligatoire</div>\n            <div *ngIf=\"f.email.errors.email\">Veuillez rentrer une adresse email valide</div>\n        </div>\n    </div>\n    <div class=\"mb-4\">\n        <input\n            formControlName=\"password\"\n            id=\"password\"\n            class=\"w-100\"\n            type=\"password\"\n            placeholder=\"Mot de passe\"\n            [ngClass]=\"{'invalid-input' : f.password.touched && f.password.invalid }\">\n        <div *ngIf=\"f.password.touched && f.password.invalid\" class=\"pa-3 mt-1 ml-3\">\n            <div *ngIf=\"f.password.errors.required\">Le mot de passe est obligatoire</div>\n            <div *ngIf=\"f.password.errors.minlength\">Le mot de passe doit contenir au minimum 8 caractères</div>\n        </div>\n    </div>\n\n    <div class=\"d-flex w-100\">\n      <a class=\"ml-auto nav-link text-dark underline-hover mb-4\" href=\"password_forgotten\" >Mot de passe oublié ?</a>\n    </div>\n    <button type=\"submit\" [disabled]=\"form.invalid\" class=\"btn-2 mb-5\">Me connecter</button>\n  </form>\n</div>\n<app-footer></app-footer>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { AppRoutingModule } from './app-routing.module';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from \"@angular/common/http\";\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n\nimport { AppComponent } from './app.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ConnexionComponent } from './connexion/connexion.component';\nimport { IndexViewComponent } from './index-view/index-view.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { HomeComponent } from './home/home.component';\nimport { HistoryComponent } from './history/history.component';\n\nimport { AuthService } from './services/auth.service';\nimport { AuthGuard } from './services/authGuard.service';\nimport { AuthGuardAdmin } from './services/authGuardAdmin.service';\nimport { AuthGuardEmp } from './services/authGuardEmp.service';\nimport { TokenInterceptorService } from './services/token-interceptor.service';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { LandingComponent } from './landing/landing.component';\nimport { ForgetPasswordComponent } from './forget-password/forget-password.component';\nimport { LogoFooterComponent } from './logo-footer/logo-footer.component';\nimport { RegisterConnexionComponent } from './register-connexion/register-connexion.component';\nimport { ProfilComponent } from './profil/profil.component';\nimport { HeaderClientComponent } from './header-client/header-client.component';\nimport { ReinitPasswordComponent } from './reinit-password/reinit-password.component';\nimport { EmailConfirmationComponent } from './email-confirmation/email-confirmation.component';\nimport { EmpHomeComponent } from './emp-home/emp-home.component';\nimport { EmpLoginComponent } from './emp-login/emp-login.component';\nimport { EmpStatsComponent } from './emp-stats/emp-stats.component';\nimport { AdminLoginComponent } from './admin-login/admin-login.component';\nimport { AdminHomeComponent } from './admin-home/admin-home.component';\nimport { AdminNewEmpComponent } from './admin-new-emp/admin-new-emp.component';\nimport { AdminModifyEmpComponent } from './admin-modify-emp/admin-modify-emp.component';\nimport { HeaderEmpComponent } from './header-emp/header-emp.component';\nimport { HeaderAdminComponent } from './header-admin/header-admin.component';\nimport { SidebarAdminComponent } from './sidebar-admin/sidebar-admin.component';\nimport { SidebarEmpComponent } from './sidebar-emp/sidebar-emp.component';\nimport { AdminListEmpComponent } from './admin-list-emp/admin-list-emp.component';\nimport { LandingPageComponent } from './landing-page/landing-page.component';\nimport { ReConnectComponent } from './re-connect/re-connect.component';\nimport { ListUsersComponent } from './list-users/list-users.component';\nimport { AdminListUsersViewComponent } from './admin-list-users-view/admin-list-users-view.component';\nimport { EmpListUsersViewComponent } from './emp-list-users-view/emp-list-users-view.component';\nimport { FilterPipe } from './pipes/filter.pipe';\nimport { AdminUpdateUserComponent } from './admin-update-user/admin-update-user.component';\nimport { StylePageComponent } from './style-page/style-page.component';\nimport { SimulateurCaisseComponent } from './simulateur-caisse/simulateur-caisse.component';\nimport { RegisterConfirmationComponent } from './register-confirmation/register-confirmation.component';\nimport { ListEmpComponent } from './list-emp/list-emp.component';\nimport { EmailingComponent } from './emailing/emailing.component';\nimport { PopUpComponent } from './pop-up/pop-up.component';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { PopUpDeleteComponent } from './pop-up-delete/pop-up-delete.component';\nimport { MailPasswordSentComponent } from './mail-password-sent/mail-password-sent.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    ConnexionComponent,\n    IndexViewComponent,\n    HeaderComponent,\n    FooterComponent,\n    HomeComponent,\n    HistoryComponent,\n    SidebarComponent,\n    LandingComponent,\n    ForgetPasswordComponent,\n    LogoFooterComponent,\n    RegisterConnexionComponent,\n    ProfilComponent,\n    HeaderClientComponent,\n    ReinitPasswordComponent,\n    EmailConfirmationComponent,\n    EmpHomeComponent,\n    EmpLoginComponent,\n    EmpStatsComponent,\n    AdminLoginComponent,\n    AdminHomeComponent,\n    AdminNewEmpComponent,\n    AdminModifyEmpComponent,\n    HeaderEmpComponent,\n    HeaderAdminComponent,\n    SidebarAdminComponent,\n    SidebarEmpComponent,\n    AdminListEmpComponent,\n    LandingPageComponent,\n    ReConnectComponent,\n    ListUsersComponent,\n    AdminListUsersViewComponent,\n    EmpListUsersViewComponent,\n    FilterPipe,\n    AdminUpdateUserComponent,\n    StylePageComponent,\n    SimulateurCaisseComponent,\n    RegisterConfirmationComponent,\n    ListEmpComponent,\n    EmailingComponent,\n    PopUpComponent,\n    PopUpDeleteComponent,\n    MailPasswordSentComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    Ng2SearchPipeModule,\n    ReactiveFormsModule,\n    NoopAnimationsModule,\n    MatDialogModule\n  ],\n  entryComponents: [\n    PopUpComponent,\n    PopUpDeleteComponent,\n  ],\n  providers: [\n    AuthService,\n    AuthGuard,\n    {\n      provide : HTTP_INTERCEPTORS,\n      useClass : TokenInterceptorService,\n      multi : true\n    },\n    AuthGuardAdmin,\n    {\n      provide : HTTP_INTERCEPTORS,\n      useClass : TokenInterceptorService,\n      multi : true\n    },\n    AuthGuardEmp,\n    {\n      provide : HTTP_INTERCEPTORS,\n      useClass : TokenInterceptorService,\n      multi : true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-update-user',\n  templateUrl: './admin-update-user.component.html',\n  styleUrls: ['./admin-update-user.component.scss']\n})\nexport class AdminUpdateUserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from \"@angular/common/http\";\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { Employe } from '../models/Employe';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PopUpComponent } from '../pop-up/pop-up.component';\nimport { PopUpDeleteComponent } from '../pop-up-delete/pop-up-delete.component';\nimport { environment } from '../../environments/environment';\n\n\n@Component({\n  selector: 'app-list-emp',\n  templateUrl: './list-emp.component.html',\n  styleUrls: ['./list-emp.component.scss']\n})\nexport class ListEmpComponent implements OnInit {\n  @Input() employes$ : Observable<Employe>;\n  filter : string;\n  employe : Employe;\n  passwordIncorrect =false;\n  passwordNotIdenticals : false;\n\n  listEmployes = true;\n  // confirmationDeleteForm = false;\n  // confirmationDeleteMsg = false;\n  updateEmployeForm = false;\n  // confirmationUpdateEmployeMsg = false;\n  email = ''\n  constructor(\n    private httpClient : HttpClient,\n    private router : Router,\n    public dialog: MatDialog\n  ) {};\n\n\n    ngOnInit(): void {\n    var url = environment.apiUrl+\"/admin/employees\";\n    this.employes$ = this.httpClient.get<Employe>(url);\n  }\n\n  hiddenAll (){\n    this.listEmployes = false;\n    // this.confirmationDeleteForm = false;\n    // this.confirmationDeleteMsg = false;\n    this.updateEmployeForm = false;\n    // this.confirmationUpdateEmployeMsg = false;\n  }\n\n  gererEmploye(employe : Employe){\n    this.employe = employe;\n    this.hiddenAll();\n    this.updateEmployeForm=true;\n  }\n\n  backToListEmployes(){\n    this.employe = null;\n    this.hiddenAll();\n    this.listEmployes=true;\n  }\n\n  deleteEmploye(email : string){\n    this.openDialogDelete();\n\n    this.hiddenAll();\n    this.email = email;\n    // this.confirmationDeleteForm =true;\n  }\n\n  confirmDeleteEmploye(){\n    var url = 'api/employe/admin/';\n    this.httpClient\n    .delete(url+this.email )\n    .toPromise()\n    .then(\n      (res : any) => {\n        var title ='Confirmation';\n        var content = \"Le compte a bien été supprimé\";\n        var link ='/admin_list_emp';\n        this.openDialog(title, content, link);\n        this.email = '';\n        this.hiddenAll();\n        this.listEmployes=true;\n      },\n      (error) => {\n        alert(error.error.error);\n        console.log(error);\n      }\n    )\n  }\n  cancel(){\n    this.email = '';\n    // this.hiddenAll();\n    // this.listEmployes = true;\n  }\n\n  onSubmitPassword(form : NgForm){\n    // var title ='Confirmation';\n    // var content = \"Le mot de passe a bien été mis à jour\";\n    // var link ='/admin_list_emp';\n    // this.openDialog(title, content, link);\n    // this.hiddenAll();\n    // this.listEmployes =true;\n  }\n  onSubmitEmail(form : NgForm){\n    var url = 'api/user/admin/employe/';\n    const body  = {\n      nom: this.employe.nom,\n      prenom: this.employe.prenom,\n      email : form.value.email,\n      magasin: this.employe.magasin\n    }\n    console.log(body);\n\n    this.httpClient\n    .put(url+this.employe.email, body )\n    .toPromise()\n    .then(\n      (res : any) => {\n        var title ='Confirmation';\n        var content = \"L'email a bien été mis à jour\";\n        var link ='/admin_list_emp';\n        this.openDialog(title, content, link);\n        this.hiddenAll();\n        // this.updateEmployeForm = false;\n        this.listEmployes =true;\n      },\n      (error) => {\n        alert(error.error.error);\n        console.log(error);\n      }\n    )\n\n    }\n\n\n  onSubmitInfos(form : NgForm) {\n    var url = 'api/user/admin/employe/';\n    const body  = {\n        nom: form.value.nom,\n        prenom: form.value.prenom,\n        email : this.employe.email,\n        magasin: form.value.magasin\n    }\n    console.log(body);\n    this.httpClient\n    .put(url+this.employe.email, body )\n    .toPromise()\n    .then(\n      (res : any) => {\n        var title ='Confirmation';\n        var content = \"Le compte employé a bien été mis à jour\";\n        var link ='/admin_list_emp';\n        this.openDialog(title, content, link);\n        this.hiddenAll();\n        // this.updateEmployeForm = false;\n        this.listEmployes =true;\n      },\n      (error) => {\n        alert(error.error.error);\n        console.log(error);\n      }\n    )\n  }\n\n  openDialog(title : String, content : String, link : String) {\n    this.dialog.open(PopUpComponent, {\n      width: '50%',\n      data: {\n        title: title,\n        content: content,\n        link : link\n      }\n    });\n  }\n\n  // openDialogDelete() {\n  //   const dialogRef = this.dialog.open(PopUpDeleteComponent, {\n  //     width: '50%',\n  //     data: {\n  //       title: \"Supprimer\",\n  //       content: \"voulez vraiment supprimer cet utilisateur\",\n  //       link : '/admin_list_emp'\n  //     }\n  //   });\n  //\n  //   dialogRef.afterClosed().subscribe(result => {\n  //     if (result){\n  //       console.log(result);\n  //\n  //       // this.confirmDeleteEmploye();\n  //     }else{\n  //       console.log(result);\n  //\n  //       this.cancel();\n  //       this.hiddenAll();\n  //       this.listEmployes =true;\n  //     }\n  //   });\n  //\n  // }\n\n  openDialogDelete() {\n      const dialogRef = this.dialog.open(PopUpDeleteComponent, {\n        width: '50%',\n        height: '200px',\n        data: {\n          title: \"Supprimer\",\n          content: \"voulez vraiment supprimer cet utilisateur\",\n          link : '/admin_list_emp'\n        }\n      });\n\n      dialogRef.afterClosed().subscribe(result => {\n        if ( result ){\n              this.confirmDeleteEmploye();\n            }else{\n              console.log( result );\n\n              this.cancel();\n              this.hiddenAll();\n              this.listEmployes =true;\n            }\n        // console.log(`Dialog result: ${result}`);\n      });\n    }\n}\n","<div class=\"filter mt-4 ml-5 mb-5\" *ngIf=\"listEmployes\">\n  <div class=\"row\">\n    <div class=\"col-lg-6 col-12\">\n      <span class=\"pa-1 mb-4 mr-3\">Filtrer les utilisateurs : </span>\n      <input class =\"col-5\" type=\"text\" name=\"filter\" value=\"\" placeholder=\"serach\" [(ngModel)]=\"filter\">\n    </div>\n    <div class=\"d-lg-block\">\n      <span class=\"pa-1 mb-4 mr-3\">Nouveau employé : </span>\n      <button class=\"btn-2\" type=\"button\" name=\"button\" routerLink=\"/admin_new_emp\">Ajouter</button>\n    </div>\n  </div>\n</div>\n<div class=\"mt-5 ml-5\" *ngIf=\"listEmployes\">\n  Voici la liste des utilisateurs qui correspondent à votre recherche :\n  <table class=\"table mt-4 w table-borderless table-responsive-lg\" *ngIf=\"employes$ | async as employes\" >\n    <thead class=\"bg-clr-2 clr-1\">\n      <tr>\n        <td scope=\"col\">Prénom</td>\n        <td scope=\"col\">Nom</td>\n        <td scope=\"col\">Email</td>\n        <td scope=\"col\">magasin</td>\n        <td scope=\"col\"></td>\n        <td scope=\"col\"></td>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"brd-top-1\" *ngFor=\"let employe of employes | filter : filter\">\n        <td class=\"align-middle\">{{ employe.prenom }}</td>\n        <td class=\"align-middle\">{{ employe.nom }}</td>\n        <td class=\"align-middle\">{{ employe.email }}</td>\n        <td class=\"align-middle\">{{ employe.magasin }}</td>\n        <td class=\"align-middle\">\n          <button class=\"btn-2\" (click)=\"gererEmploye(employe)\">Gérer</button>\n        </td>\n        <td class=\"align-middle\">\n          <button class=\"btn-3 px-2\" (click)=\"deleteEmploye(employe.email)\">\n            <svg>\n              <rect x=\"0\" y=\"0\" fill=\"none\" width=\"100%\" height=\"100%\"></rect>\n            </svg>\n            Supprimer\n          </button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <!-- <app-re-connect *ngIf=\"!employes\"></app-re-connect> -->\n\n</div>\n\n<!-- <div class=\"w-50 mx-auto  text-align-center p-5 mt-5\" *ngIf=\"confirmationDeleteForm\" >\n  <p class=\"\">voulez vous vraiment supprimer cet utilisateur</p>\n  <div class=\"\">\n    <button class =\"btn-2 px-2 mr-2\" (click)=\"confirmDeleteEmploye()\">Supprimer</button>\n    <button class =\"btn-1 px-2\" (click)=\"cancel()\">\n      <svg>\n        <rect x=\"0\" y=\"0\" fill=\"none\" width=\"100%\" height=\"100%\"></rect>\n      </svg>\n      Annuler\n    </button>\n  </div>\n</div> -->\n\n<!-- <div class=\"w-50 mx-auto  text-align-center p-5 mt-5 bg-clr-2\" *ngIf=\"confirmationDeleteMsg\" >\n  <p class=\"clr-1\">L'utilisateur a bien été supprimer</p>\n  <div class=\"\">\n    <button class =\"btn-4 px-4 mr-2\" (click)=\"cancel()\">\n      <svg>\n        <rect x=\"0\" y=\"0\" fill=\"none\" width=\"100%\" height=\"100%\"></rect>\n      </svg>\n      ok\n    </button>\n  </div>\n</div> -->\n\n\n<div class=\"col-12 col-lg-7 no-gutters my-5\" *ngIf=\"updateEmployeForm\">\n  <p class=\"ml-4\" (click)=\"backToListEmployes()\" >Revenir à la liste des employes<p>\n  <form class= \"w mx-auto mb-5\" (ngSubmit)=\"onSubmitEmail(fEmail)\" #fEmail='ngForm'>\n    <p class=\"t-1\">Modifier l'email</p>\n    <input type=\"email\" class=\"w-100 mb-3\" id=\"email\" name=\"email\" placeholder=\"Nouvelle adresse mail\" aria-describedby=\"emailHelp\" [ngModel]=\"employe.email\" required>\n    <button type=\"submit\" class=\"btn-2\" [disabled]=\"fEmail.invalid\">Valider</button>\n  </form>\n\n  <form class= \"w mx-auto mt-5\" (ngSubmit)=\"onSubmitPassword(fPassword)\" #fPassword='ngForm'>\n    <p class=\"t-1\">Modifier le mot de passe</p>\n    <input type=\"password\" class=\"w-100 mb-3\" id=\"newPassword\" name =\"newPassword\" placeholder=\"Nouveau mot de passe\" ngModel required>\n    <input type=\"password\" class=\"w-100 mb-3\" id=\"confNewPassword\" name =\"confNewPassword\" placeholder=\"Confirmation du nouveau mot de passe\" ngModel required>\n    <p class=\"\" *ngIf=\"passwordIncorrect\">Email ou mot de passe incorrect !  </p>\n    <p class=\"\" *ngIf=\"passwordNotIdenticals\">Email ou mot de passe incorrect !  </p>\n    <button type=\"submit\" class=\"btn-2 mb-5\" [disabled]=\"fPassword.invalid\">Valider</button>\n  </form>\n  <form class=\"w mx-auto\" (ngSubmit)=\"onSubmitInfos(fInfos)\" #fInfos='ngForm'>\n    <p class=\"t-1\">Modifier les informations générales</p>\n    <label for=\"nom\">Nom</label>\n    <input type=\"text\" class=\"w-100 mb-3\" id=\"nom\" name=\"nom\" placeholder =\"Nom *\"  required [ngModel]=\"employe.nom\">\n    <label for=\"prenom\">Prénom</label>\n    <input type=\"text\" class=\"w-100 mb-3\" id=\"prenom\" name=\"prenom\" placeholder =\"Prénom *\" required [ngModel]=\"employe.prenom\">\n    <label for=\"magasin\">Magasin</label>\n    <input type=\"text\" class=\"w-100 mb-3\" id=\"magasin\" name=\"magasin\" placeholder =\"Adresse *\" required [ngModel]=\"employe.magasin\">\n    <button type=\"submit\" class=\"btn-2 mb-4\" >Enregister les modifications</button>\n  </form>\n</div>\n\n<!-- <div class=\"w-50 mx-auto  text-align-center p-5 mt-5 bg-clr-2\" *ngIf=\"confirmationUpdateEmployeMsg\" >\n  <p class=\"clr-1\">L'utilisateur a bien été mis à jour</p>\n  <div class=\"\">\n    <button class =\"btn-4 px-4 mr-2\" (click)=\"backToListEmployes()\">\n      <svg>\n        <rect x=\"0\" y=\"0\" fill=\"none\" width=\"100%\" height=\"100%\"></rect>\n      </svg>\n      ok\n    </button>\n  </div>\n</div> -->\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PopUpComponent } from '../pop-up/pop-up.component';\nimport { Router } from '@angular/router';\nimport { environment } from '../../environments/environment';\n\n\n@Component({\n  selector: 'app-email-confirmation',\n  templateUrl: './email-confirmation.component.html',\n  styleUrls: ['./email-confirmation.component.scss']\n})\nexport class EmailConfirmationComponent implements OnInit {\n\n  constructor(\n    private httpClient: HttpClient,\n    private route : ActivatedRoute,\n    public dialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {\n  }\n\n  form = new FormGroup({\n    token: new FormControl('', [Validators.required]),\n  });\n\n  get f(){\n    return this.form.controls;\n  }\n\n  onSubmit(){\n    const url = environment.apiUrl+\"/user/mailValidation/\";\n    const id = this.route.snapshot.paramMap.get('id') ;\n    const body  = {\n      token: this.form.value.token,\n    }\n\n    this.httpClient\n    .post(url+id, body )\n    .toPromise()\n    .then(\n      (res : any) => {\n        var content = \"Votre compte a bien été validé, veuillez vous connecter\";\n        var link = 'register';\n        this.openDialog(content, link, 'Message de confirmation');\n      },\n      (error) => {\n        var content = \"Le code que vous avez renseigner n'est pas valide. Veuillez ressayer\";\n        var link = 'validation/'+id;\n        this.openDialog(content, link, 'Erreur');\n      }\n    )\n  }\n\n  openDialog(content : String, link : String, title : String) {\n    this.dialog.open(PopUpComponent, {\n      width: '50%',\n      data: {\n        title: title,\n        content: content,\n        link : link\n      }\n    });\n  }\n}\n","<app-header></app-header>\n<div class=\"brd-top-1 brd-btm-1 p-5\">\n\n  <form class= \"w mx-auto\" [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n      <p class=\"t-1 mb-4\">Validation de la création de votre compte</p>\n      <p class=\"pa-1 mb-4\">Veuillez renseigner le code que vous avez reçu par mail pour finaliser la création de votre compte</p>\n      <!-- <input type=\"text\" class=\"w-75\" name=\"token\" ngModel required> -->\n      <div class=\"mb-4\">\n          <input\n              formControlName=\"token\"\n              id=\"token\"\n              class=\"w-100\"\n              type=\"text\"\n              [ngClass]=\"{'invalid-input' : f.token.touched && f.token.invalid }\">\n          <div *ngIf=\"f.token.touched && f.token.invalid\" class=\"pa-3 mt-1 ml-2 text-left\">\n              <div *ngIf=\"f.token.errors.required\">Ce champs est obligatoire</div>\n          </div>\n      </div>\n      <div class=\"d-flex\">\n        <button type=\"submit\" class=\"btn-2 mx-auto\" [disabled]=\"form.invalid\">Valider</button>\n      </div>\n  </form>\n</div>\n\n<app-footer></app-footer>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-sidebar-admin',\n  templateUrl: './sidebar-admin.component.html',\n  styleUrls: ['./sidebar-admin.component.scss']\n})\nexport class SidebarAdminComponent implements OnInit {\n\n  constructor(\n    private authService : AuthService,\n    private router : Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  seDeconnecter (){\n    this.authService.deconnexion();\n    this.router.navigate(['']);\n  }\n}\n","<div class=\"sidebar brd-right-1\">\n  <div class=\"brd-btm-1 d-flex\">\n    <a class=\"my-auto nav-link text-dark ml-2\" routerLink=\"/admin\">Voir les statistique</a>\n  </div>\n  <!-- <div class=\"brd-btm-1 d-flex\">\n    <a class=\"my-auto nav-link text-dark ml-2\" routerLink=\"/admin_new_emp\">Créer un compte employé</a>\n  </div> -->\n  <div class=\"brd-btm-1 d-flex\">\n    <a class=\"my-auto nav-link text-dark ml-2\" routerLink=\"/admin_list_emp\">Gérer les comptes employés</a>\n  </div>\n  <div class=\"brd-btm-1 d-flex\">\n    <a class=\"my-auto nav-link text-dark ml-2\" routerLink=\"/admin_list_users\">Gérer les comptes utilisateurs</a>\n  </div>\n  <!-- <div class=\"brd-btm-1 d-flex\">\n    <a class=\"my-auto nav-link text-dark ml-2\" routerLink=\"/admin_emailing\">Emailing</a>\n  </div> -->\n  <div class=\"d-flex\">\n    <a class=\"my-auto nav-link text-dark cursor-pointer ml-2\" (click)=\"seDeconnecter()\">Déconnexion</a>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register-connexion',\n  templateUrl: './register-connexion.component.html',\n  styleUrls: ['./register-connexion.component.scss']\n})\nexport class RegisterConnexionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header></app-header>\n<div class=\"container-fluid g-0\">\n  <div class=\"row\">\n    <div class=\"col-12 col-lg-6 brd-top-1 brd-btm-1 brd-right-1\">\n      <app-register></app-register>\n    </div>\n    <div class=\"col-12 col-lg-6 brd-top-1 brd-btm-1\">\n      <app-connexion></app-connexion>\n    </div>\n  </div>\n</div>\n<app-footer></app-footer>\n","import { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { Router ,CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor ( private router :Router, private authService : AuthService) {}\n  canActivate (route : ActivatedRouteSnapshot, state : RouterStateSnapshot)\n    : Observable<boolean> | Promise<boolean> | boolean {\n      if (this.authService.getLoggedInStatus() && this.authService.getRole()=='user'){\n        return true\n      }else{\n        this.router.navigate(['/register']);\n        return false;\n      }\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  loggedIn : boolean ;\n  user : boolean;\n  constructor(\n    private authService : AuthService\n  ) {}\n\n  ngOnInit(): void {\n    this.loggedIn = this.authService.getLoggedInStatus();\n    if (this.authService.getRole() == 'user')\n      this.user = true;\n    else \n      this.user = false;\n\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg p-4 navbar-light\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" href=\"\">\n      <img class=\"img-fluid\" src=\"assets/img/logo-noir.png\">\n    </a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon text-dark\"></span>\n    </button>\n\n    <div class=\"collapse navbar-collapse justify-content-end\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav align-items-center\">\n        <li class=\"nav-item ml-2\">\n          <a class=\"a-1 ml-3\" href=\"#\">Le concours</a>\n        </li>\n        <li class=\"nav-item ml-2\">\n          <a class=\"a-1 ml-3\" href=\"#\">Les gains</a>\n        </li>\n        <li class=\"nav-item ml-2\">\n          <a class=\"a-1 mx-3\" href=\"#\">Le reglement</a>\n        </li>\n        <li *ngIf =\"!(loggedIn && user)\" class=\"nav-item ml-2\">\n          <a class=\"nav-link login offset-border-effect pt-0 text-dark\" href=\"register\">\n            <svg>\n              <rect x=\"0\" y=\"0\" fill=\"none\" width=\"100%\" height=\"100%\"></rect>\n            </svg>\n            <i class=\"bi bi-person-circle fs-5\" style=\"font-size:25px;\"></i>\n            Se connecter/S'inscrire\n          </a>\n        </li>\n        <li *ngIf =\"loggedIn && user\" class=\"nav-item ml-2\">\n          <a class=\"nav-link login offset-border-effect pt-0 text-dark\" href=\"client_home\">\n            <svg>\n              <rect x=\"0\" y=\"0\" fill=\"none\" width=\"100%\" height=\"100%\"></rect>\n            </svg>\n            <i class=\"bi bi-person-circle fs-5\" style=\"font-size:25px;\"></i>\n            Mon espace client\n          </a>\n        </li>\n        <li class=\"nav-item ml-2\">\n          <a class=\"nav-link text-white pt-0 e-shop-button\" href=\"#\">\n            <i class=\"bi bi-bag-fill fs-5\" style=\"font-size:25px;\"></i>\n            E-Shop\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"footer\">\n  <div class=\"row m-0\">\n    <div class=\"col-lg-12 text-center footer-logo-section align-items-center pt-5 pb-5\">\n      <img src=\"assets/img/logo-noir.png\" class=\"1000\" data-effectJs=\"slide-up\">\n    </div>\n    <div class=\"col-lg-12 main-footer pt-5 \">\n      <div class=\"container d-flex justify-content-between\">\n        <div class=\"footer-menu\">\n          <ul class=\"list-group\">\n            <li class=\"list-group-item\">\n              <a class=\"a-2\" href=\"#\"> Mentions légales</a>\n            </li>\n            <li class=\"list-group-item\">\n              <a class=\"a-2\" href=\"#\"> Données personnelles</a>\n            </li>\n            <li class=\"list-group-item\">\n              <a class=\"a-2\" href=\"#\">Politique des cookies</a>\n            </li>\n          </ul>\n        </div>\n        <div class=\"sociale-icon\">\n          <a href=\"#\"><i class=\"bi bi-facebook mr-2\"></i></a>\n          <a href=\"#\"><i class=\"bi bi-twitter mr-2\"></i></a>\n          <a href=\"#\"><i class=\"bi bi-instagram mr-2\"></i></a>\n          <a href=\"#\"><i class=\"bi bi-youtube mr-2\"></i></a>\n        </div>\n      </div>\n      <div class=\"copyright text-right mt-3\">\n        <p>© FuriousDucks 2021</p>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../models/User';\nimport { environment } from '../../environments/environment';\n\n\nexport interface Stat {\n  gain: string;\n  count: number;\n  remaining : number;\n}\n\n@Component({\n  selector: 'app-admin-home',\n  templateUrl: './admin-home.component.html',\n  styleUrls: ['./admin-home.component.scss']\n})\n\nexport class AdminHomeComponent implements OnInit {\n\n  @Input() users$ : Observable<User>;\n  stat : any;\n  stat3 : any;\n\n  constructor(\n    private httpClient : HttpClient\n  ) { }\n\n  @Input() stats$ : Observable<Stat> ;\n\n  ngOnInit(): void {\n\n    var urlUsers = environment.apiUrl+\"/admin/users\";\n    this.users$ = this.httpClient.get<User>(urlUsers);\n\n    var url = environment.apiUrl+\"/admin/tickets/\";\n    var url2 = environment.apiUrl+\"/admin/tickets/remaining\";\n    var url3 = environment.apiUrl+\"/admin/tickets/gains\";\n    this.stats$= this.httpClient.get<Stat>(url2);\n\n    this.httpClient\n    .get(url)\n    .toPromise()\n    .then(\n      (res ) => {\n        this.stat = res;\n      },\n      (error) => {\n\n      }\n    )\n\n    this.httpClient\n    .get(url3)\n    .toPromise()\n    .then(\n      (res) => {\n        this.stat3 = res;\n      },\n      (error) => {\n\n      }\n    )\n  }\n\n  statCount (produit : string){\n    var index = 0\n    if (produit==='infuseur à thé')\n      index = 0;\n      else if (produit==='un coffret découverte d’une valeur de 39€')\n        index = 1;\n        else if (produit==='un coffret découverte d’une valeur de 69€')\n          index = 2;\n          else if (produit==='une boite de 100g d’un thé détox ou d’infusion')\n            index = 3;\n            else if (produit==='une boite de 100g d’un thé signature')\n              index = 4;\n    return this.stat[index].count;\n  }\n\n  statWin (produit : string){\n    for (let index = 0; index < this.stat3.length; index++) {\n      if (produit===this.stat3[index].gain)\n        return this.stat3[index].win ;\n    }\n    return 0;\n  }\n\n}\n","<app-header-admin></app-header-admin>\n<div class=\"row no-gutters brd-top-1 brd-btm-1\">\n  <div class=\"d-md-block d-none col-md-3 col-lg-3\">\n    <app-sidebar-admin></app-sidebar-admin>\n  </div>\n  <div class=\"col-12 col-md-9 col-lg-9 no-gutters\">\n    <div class=\"p-5 brd-btm-1 brd-btm-1\">\n      <div class=\"t-1 mb-5\">\n        Statistique du jeu concours\n      </div>\n      <div class=\"pa-1 mb-3\" *ngIf=\"users$ | async as users\">\n        Nombre des utilisateurs inscrits : <span class = \"font-weight-bold font-italic\"> {{users.length}}  utilisateurs</span>\n      </div>\n      <button class=\"btn-2\">Telecharger l’emailing list</button>\n    </div>\n    <div class=\"p-5\">\n      <div class=\"t-1 mb-3\">\n        Stats par magasin\n      </div>\n      <div class=\"row\">\n        <div class=\"col-12 col-lg-5\">\n          <select class=\"mt-3\">\n            <option value=\"\">Tous</option>\n            <option value=\"\">Paris</option>\n            <option value=\"\">Nice</option>\n            <option value=\"\">Marseille</option>\n            <option value=\"\">Bordeaux</option>\n            <option value=\"\">Lille</option>\n          </select>\n        </div>\n        <div class=\"col-12 col-lg-7 \">\n          <div class=\"d-flex mb-2\">\n            <div class=\"align-self-center\">\n              <div class=\"Rectangle-1 mr-2\"></div>\n            </div>\n              <span class=\"pa-1\">\n                Gains retirés (20%)\n              </span>\n          </div>\n          <div class=\"d-flex mb-2\">\n            <div class=\"align-self-center\">\n              <div class=\"Rectangle-2 mr-2\"></div>\n            </div>\n              <span class=\"pa-1\">\n                En attente de retrait (30%)\n              </span>\n          </div>\n          <div class=\"d-flex mb-2\">\n            <div class=\"align-self-center\">\n              <div class=\"Rectangle-3 mr-2\"></div>\n            </div>\n              <span class=\"pa-1\">\n                En stock (50%)\n              </span>\n          </div>\n        </div>\n        <div id=\"chartContainer\" style=\"height: 50px; width: 50%;\"></div>\n\n\n      </div>\n      <div class=\"table-responsive-lg\">\n        <table class=\"table align-middle  pa-1 mt-5\" *ngIf=\"stats$ | async as stats\">\n          <thead>\n            <tr class=\"table-borderless\">\n              <th class=\"produit align-middle\" scope=\"col\">Produit</th>\n              <th class=\"others  align-middle\" scope=\"col\">Total</th>\n              <th class=\"others align-middle\" scope=\"col\">Gagnés</th>\n              <th class=\"others align-middle\" scope=\"col\">Gain récupéré</th>\n              <th class=\"others align-middle\" scope=\"col\">En Attente de retrait</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor = \"let stat of stats\">\n              <th class=\"align-middle\"  scope=\"row\">{{stat.gain}}</th>\n              <td class=\"align-middle\" >{{statCount(stat.gain)}}</td>\n              <td class=\"align-middle\" >{{statCount(stat.gain)-stat.remaining}}</td>\n              <td class=\"align-middle\" >{{statWin(stat.gain)}}</td>\n              <td class=\"align-middle\" >{{statCount(stat.gain)-stat.remaining-statWin(stat.gain)}}</td>\n            </tr>\n            <!-- <tr>\n              <th scope=\"row\">Infuseur à thé</th>\n              <td>900 000</td>\n              <td>500 000</td>\n              <td>500 000</td>\n              <td>500 000</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">une boite de 100g d’un thé détox ou d’infusion</th>\n              <td>300 000</td>\n              <td>500 000</td>\n              <td>500 000</td>\n              <td>500 000</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">une boite de 100g d’un thé signature</th>\n              <td>150 000</td>\n              <td>500 000</td>\n              <td>500 000</td>\n              <td>500 000</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">un coffret découverte d’une valeur de 39€</th>\n              <td>90 000</td>\n              <td>500 000</td>\n              <td>500 000</td>\n              <td>500 000</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">un coffret découverte d’une valeur de 69€</th>\n              <td>60 000</td>\n              <td>500 000</td>\n              <td>500 000</td>\n              <td>500 000</td>\n            </tr> -->\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</div>\n<app-footer></app-footer>\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { HttpClient, HttpErrorResponse, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PopUpComponent } from '../pop-up/pop-up.component';\nimport { environment } from '../../environments/environment';\n\n\n@Component({\n  selector: 'app-admin-new-emp',\n  templateUrl: './admin-new-emp.component.html',\n  styleUrls: ['./admin-new-emp.component.scss']\n})\nexport class AdminNewEmpComponent implements OnInit {\n  // confirmationCreateEmployeMsg = false;\n  emailError = false;\n  passwordError = false;\n  confPasswordError = false;\n  defaultStore = 'Paris';\n  constructor(\n    private httpClient : HttpClient,\n    public dialog: MatDialog\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(form : NgForm){\n    const url = environment.apiUrl+'/admin/employe/new';\n    var send =true;\n    if(form.value.password!=form.value.confPassword){\n      this.confPasswordError=true;\n      send=false;\n    }\n    console.log(\"send\"+send);\n    if (send==true){\n\n      const body  = {\n          nom: form.value.lastName,\n          prenom: form.value.firstName,\n          email: form.value.email,\n          password: form.value.password,\n          password_confirm: form.value.confPassword,\n          magasin: form.value.store\n      }\n\n      this.httpClient\n      .post(url, body )\n      .toPromise()\n      .then(\n        (res : any) => {\n          var title ='Confirmation';\n          var content = \"Le compte employé a bien été créé\";\n          var link ='/admin_list_emp';\n          this.openDialog(title, content, link);\n        },\n        (error) => {\n          var title ='Error';\n          var content = error.error.error;\n          var link ='/admin_new_emp';\n          this.openDialog(title, content, link);\n          // alert(error.error.error);\n        }\n      )\n    }\n  }\n  // conf(){\n  //   this.confirmationCreateEmployeMsg = false;\n  // }\n\n  openDialog(title : String, content : String, link : String) {\n      this.dialog.open(PopUpComponent, {\n        width: '50%',\n        data: {\n          title: title,\n          content: content,\n          link : link\n        }\n      });\n    }\n}\n","<app-header-admin></app-header-admin>\n<div class=\"row no-gutters brd-top-1 brd-btm-1\">\n  <div class=\"d-md-block d-none col-md-3 col-lg-3\">\n    <app-sidebar-admin></app-sidebar-admin>\n  </div>\n\n  <div class=\"col-12 col-md-9 col-lg-9 no-gutters p-5 pt-4\">\n    <div class=\"mb-4\">\n      Retour à la liste des employé : <a class=\"a-1\" routerLink=\"/admin_list_emp\"> cliquer ici </a>\n    </div>\n    <form class=\"\" (ngSubmit)=\"onSubmit(f)\" #f='ngForm'>\n      <p class=\"t-1\">Créer un nouveau compte employé</p>\n      <input type=\"text\" class=\"col-12 col-md-10 col-lg-8 col-xl-7 mb-3\" id=\"lastName\" name=\"lastName\" placeholder =\"Nom *\"  ngModel required><br>\n      <input type=\"text\" class=\"col-12 col-md-10 col-lg-8 col-xl-7 mb-3\" id=\"firstName\" name=\"firstName\" placeholder =\"Prénom *\" ngModel required><br>\n      <input type=\"email\" class=\"col-12 col-md-10 col-lg-8 col-xl-7 mb-3\" id=\"email\" name=\"email\" placeholder=\"Email *\" ngModel required><br>\n      <input type=\"password\" class=\"col-12 col-md-10 col-lg-8 col-xl-7 mb-3\" id=\"password\" name=\"password\" placeholder=\"Mot de passe *\" ngModel required><br>\n      <input type=\"password\" class=\"col-12 col-md-10 col-lg-8 col-xl-7 mb-3\" id=\"confPassword\" name=\"confPassword\" placeholder=\"Confirmation de mot de passe *\" ngModel required><br>\n      <select class=\"col-12 col-md-10 col-lg-8 col-xl-7 mb-3\" name=\"store\" [ngModel]=\"defaultStore\"><br>\n        <option value=\"Paris\">Paris</option>\n        <option value=\"Nice\">Nice</option>\n      </select>\n      <br>\n      <button type=\"submit\" class=\"btn-2 mb-5\" [disabled]=\"f.invalid\">Créer mon compte</button>\n    </form>\n    <!-- <div class=\"w-50 mx-auto  text-align-center p-5 mt-5 bg-clr-2\" *ngIf=\"confirmationCreateEmployeMsg\" >\n      <p class=\"clr-1\">Le compte  employe a bien été créé</p>\n      <div class=\"\">\n        <button class =\"btn-4 px-4 mr-2\" (click)=\"conf()\">\n          <svg>\n            <rect x=\"0\" y=\"0\" fill=\"none\" width=\"100%\" height=\"100%\"></rect>\n          </svg>\n          ok\n        </button>\n      </div>\n    </div> -->\n  </div>\n</div>\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable()\nexport class AuthService {\n  private loggedInStatus = JSON.parse(localStorage.getItem('loggedInStatus') || 'false')\n  private role = localStorage.getItem('role') || ''\n  private token = localStorage.getItem('token') || ''\n  private userId = localStorage.getItem('userId') || ''\n  private email = localStorage.getItem('email') || ''\n\n  constructor() {};\n\n  getLoggedInStatus () :boolean {\n    return JSON.parse(localStorage.getItem('loggedInStatus') || this.loggedInStatus)\n  }\n\n  setLoggedInStatus (valu :boolean) {\n    localStorage.setItem('loggedInStatus' , valu+'') ;\n    this.loggedInStatus = JSON.parse(localStorage.getItem('loggedInStatus'));\n  }\n\n  setToken (valu : string ){\n    this.token = valu;\n    localStorage.setItem('token',valu)\n  }\n\n  getToken() : string{\n    return localStorage.getItem('token') || this.token\n  }\n\n  setRole (valu : string ){\n    this.role = valu;\n    localStorage.setItem('role',valu)\n  }\n\n  getRole() : string{\n    return localStorage.getItem('role') || this.role\n  }\n\n  setEmail (valu : string ){\n    this.email = valu;\n    localStorage.setItem('email',valu)\n  }\n\n  getEmail() : string{\n    return localStorage.getItem('email') || this.email\n  }\n\n  setUserId (valu : string ){\n    this.userId = valu;\n    localStorage.setItem('userId',valu)\n  }\n\n  getUserId() : string{\n    return localStorage.getItem('userId') || this.userId\n  }\n\n  deconnexion(){\n    this.setLoggedInStatus(false);\n    this.token='';\n    localStorage.removeItem('token');\n    this.role = '';\n    localStorage.removeItem('role');\n    this.userId = '';\n    localStorage.removeItem('userId');\n    this.email = '';\n    localStorage.removeItem('email');\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { TicketCode } from '../models/TicketCode';\nimport { environment } from '../../environments/environment';\n\n\n\n@Component({\n  selector: 'app-simulateur-caisse',\n  templateUrl: './simulateur-caisse.component.html',\n  styleUrls: ['./simulateur-caisse.component.scss']\n})\nexport class SimulateurCaisseComponent implements OnInit {\n  // interface Result {\n  //   ticketCode : string\n  // };\n\n  ticketCode;\n  constructor(\n    private httpClient : HttpClient\n  ) {}\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(form: NgForm){\n    var url = environment.apiUrl+\"/ticket/create/\";\n    var body = {\n      buyer : form.value.buyer\n    }\n    // this.res$ = this.httpClient.post<>(url, body);\n\n    this.httpClient\n    .post(url, body)\n    .toPromise()\n    .then(\n      (res : any) => {\n          console.log(res.ticketCode);\n          this.ticketCode = res.ticketCode;\n      },\n      (error) => {\n        alert(error.error.error);\n      }\n    )\n\n  }\n\n}\n","<div class=\"brd-top-1 brd-btm-1 h\">\n  <form class= \"w mx-auto\" (ngSubmit)=\"onSubmit(f)\" #f='ngForm'>\n      <p class=\"t-1\">Simulateur de la caisse</p>\n      <p class=\"pa-1\">Veuillez indiquer le montant de votre achat</p>\n      <input type=\"text\" class=\"w-75\" name=\"buyer\" placeholder=\"Valeur d'achat\" ngModel required>\n      <div class=\"d-flex\">\n        <button type=\"submit\" class=\"btn-2 mx-auto\" [disabled]=\"f.invalid\">Valider</button>\n      </div>\n  </form>\n  <div class=\"w mx-auto text-center mb-1\" *ngIf=\"ticketCode != null\">\n    <div class=\"t-2\">\n      Votre code est : {{ticketCode}}\n    </div>\n  </div>\n</div>\n\n<app-footer></app-footer>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.scss']\n})\nexport class LandingPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"landing\">\n  <app-header></app-header>\n  <div class=\"section-hero d-flex flex-column justify-content-center align-items-center\">\n    <img src=\"../../assets/img/logo-blanc.png\" class=\"1000\" width=\"136\" height=\"163\" data-effectJs=\"fade-down\">\n    <h1 class=\"text-white mb-3 mt-4 1000\" data-effectJs=\"fade-up\">Grand jeu concours</h1>\n    <p class=\"text-center mb-3 1000\" data-effectJs=\"zoom-in\">pour l'ouverture de notre <br> 10ème boutique</p>\n    <a href=\"#\" class=\"call-to-action grow-shadow-hover 1000\" data-effectJs=\"zoom-in\">Je participe</a>\n  </div>\n  <div class=\"container\">\n    <div class=\"section1 row pt-5 align-items-center\">\n      <div class=\"col-lg-6 1000\" data-effectJs=\"zoom-out-left\">\n        <h1 class=\"section1-h1 display-4 font-weight-bold\">Concours<br>100% gagnat</h1>\n      </div>\n      <div class=\"col-lg-6 1000\" data-effectJs=\"zoom-in-right\">\n        <p class=\"mb-5\">A l’occasion de l’ouverture de notre 10ème boutique, nous organisons un concours 100% gagnant. Remportez un lot d’une valeur minimum de 15€ à partir de 49€ d’achat dans nos boutiques ou sur notre boutique en ligne. À l’issue du jeu-concours, un tirage au sort sera effectué parmi tous les participants afin de déterminer le gagnant\n          d’un an de thé d’une valeur de 360€.</p>\n          <a href=\"#\" class=\"section1-call-to-action offset-border-effect\">\n            <svg>\n              <rect x=\"0\" y=\"0\" fill=\"none\" width=\"100%\" height=\"100%\"></rect>\n            </svg>\n            Je participe\n          </a>\n        </div>\n      </div>\n      <div class=\"section2 row flex-column\">\n        <div class=\"section2-title text-center pt-4 pb-4 1000\" data-effectJs=\"slide-up\">\n          <h2 class=\"font-weight-bold\">Les gains</h2>\n        </div>\n        <div class=\"section2-card-container\">\n          <div class=\"row px-3\">\n            <div class=\"col-lg-4 col-md-6 p-4 parent-for-scale-hover 1000\" style=\"margin:-1px;\" data-effectJs=\"fade-up-left\">\n              <div class=\"card overflow-hidden\">\n                <img src=\"../../assets/img/infuseur.png\" class=\"card-img-top scale-hover\" alt=\"...\">\n                <div class=\"card-body\">\n                  <p>valeur de gain 15€</p>\n                  <h5 class=\"card-title\">L'infuseur</h5>\n                  <p class=\"card-text\">Un filtre à thé en acier, idéal pour infuser son thé dans une grande tasse.</p>\n                  <a href=\"#\" class=\"a-1\">Voir le produit</a>\n                </div>\n              </div>\n            </div>\n            <span class=\"horizontal-separator-line\"></span>\n            <div class=\"col-lg-4 col-md-6 p-4 parent-for-scale-hover 1000\" style=\"margin:-1px;\" data-effectJs=\"fade-up-right\">\n              <div class=\"card overflow-hidden\">\n                <img src=\"../../assets/img/the-1.png\" class=\"card-img-top scale-hover\" alt=\"...\">\n                <div class=\"card-body\">\n                  <p>valeur de gain 15€</p>\n                  <h5 class=\"card-title\">une boite de 100g d’un thé détox ou d’infusion</h5>\n                  <p class=\"card-text\">Un filtre à thé en acier, idéal pour infuser son thé dans une grande tasse.</p>\n                  <a href=\"#\" class=\"a-1\">Voir le produit</a>\n                </div>\n              </div>\n            </div>\n            <span class=\"horizontal-separator-line\"></span>\n            <div class=\"col-lg-4 col-md-6 p-4 parent-for-scale-hover 1000\" style=\"margin:-1px;\" data-effectJs=\"zoom-out-up\">\n              <div class=\"card overflow-hidden\">\n                <img src=\"../../assets/img/the-2.png\" class=\"card-img-top scale-hover\" alt=\"...\">\n                <div class=\"card-body\">\n                  <p>valeur de gain 15€</p>\n                  <h5 class=\"card-title\">une boite de 100g d’un thé signature</h5>\n                  <p class=\"card-text\">Un filtre à thé en acier, idéal pour infuser son thé dans une grande tasse.</p>\n                  <a href=\"#\" class=\"a-1\">Voir le produit</a>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"vertical-separator-line\"></div>\n          <div class=\"row px-3\">\n            <div class=\"col-lg-6 p-4 parent-for-scale-hover\" style=\"margin:-1px;\">\n              <div class=\"card overflow-hidden\">\n                <img src=\"../../assets/img/coffret-1.png\" class=\"card-img-top scale-hover\" alt=\"...\">\n                <div class=\"card-body\">\n                  <p>Valeur du gain 39€</p>\n                  <h5 class=\"card-title\">Coffret découverte Sakura</h5>\n                  <p class=\"card-text\">Découvrez nos deux thés signature aux fleurs de cerisier, réunis dans un seul coffret.</p>\n                  <a href=\"#\" class=\"a-1\">Voir le produit</a>\n                </div>\n              </div>\n            </div>\n            <span class=\"horizontal-separator-line\"></span>\n            <div class=\"col-lg-6 p-4 parent-for-scale-hover\" style=\"margin:-1px; \">\n              <div class=\"card overflow-hidden\">\n                <img src=\"../../assets/img/coffret-2.png\" class=\"card-img-top scale-hover\" alt=\"...\">\n                <div class=\"card-body\">\n                  <p>Valeur du gain 69€</p>\n                  <h5 class=\"card-title\">Coffret découverte Signatures</h5>\n                  <p class=\"card-text\">Toutes les saveurs de nos thés signatures réunies en un seul coffret découverte. </p>\n                  <a href=\"#\" class=\"a-1\">Voir le produit</a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n      <div class=\"section3\">\n        <div class=\"row position-relative\">\n          <div class=\"col-lg-6 p-0 \">\n            <img src=\"../../assets/img/visu-banner.png\" style=\"width: 100%; height: 100%;\">\n          </div>\n          <div class=\"col-lg-6 section3-div2 p-5\">\n            <h2 class=\"display-4 text-white mb-1\">Un an de thé<br> d’une valeur<br> de 360€ à la clé</h2>\n            <p class=\"text-white mb-4\">À l’issue du jeu-concours, un tirage au sort<br> sera effectué parmi tous les participants<br> afin de déterminer le gagnant </p>\n            <a href=\"\" class=\"section3-call-to-action\">\n              <svg>\n                <rect x=\"0\" y=\"0\" fill=\"none\" width=\"100%\" height=\"100%\"></rect>\n              </svg>\n              Je participe\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n    <app-footer></app-footer>\n  </div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from 'rxjs';\n\nimport { Ticket } from \"../models/Ticket\";\nimport { environment } from '../../environments/environment';\n\n\n@Component({\n  selector: 'app-history',\n  templateUrl: './history.component.html',\n  styleUrls: ['./history.component.scss']\n})\nexport class HistoryComponent implements OnInit {\n\n  @Input() tickets$ : Observable<Ticket[]>;\n  imgSrcInfuseur = \"../assets/img/infuseur.png\";\n  imgSrcThe1 = \"../assets/img/the-1.png\";\n  imgSrcThe2 = \"../assets/img/the-2.png\";\n  imgSrcCoffret1 = \"../assets/img/coffret-1.png\";\n  imgSrcCoffret2 = \"../assets/img/coffret-2.png\";\n\n  // tickets = [\n  //   {\n  //     number : 1,\n  //     code :\"123456789\",\n  //     status : \"validé\",\n  //     gain : \"coffret infuseurs\",\n  //     valeur : \"49 EUR\",\n  //     date: \"22/07/1992\"\n  //   },\n  //   {\n  //     number : 2,\n  //     code :\"123456789\",\n  //     status : \"récupéré le 24/09/2021\",\n  //     gain : \"coffret infuseurs\",\n  //     valeur : \"49 EUR\",\n  //     date: \"22/07/1992 à 16H33\"\n  //   },\n  //   {\n  //     number : 3,\n  //     code :\"123456789\",\n  //     status : \"récupérer\",\n  //     gain : \"coffret infuseurs\",\n  //     valeur : \"49 EUR\",\n  //     date: \"22/07/1992 à 16H33\"\n  //   },\n  //\n  // ]\n  constructor(\n    private httpClient : HttpClient\n  ) { }\n\n  ngOnInit(): void {\n    var url = environment.apiUrl+\"/user/tickets/\";\n    this.tickets$ = this.httpClient.get<Ticket[]>(url);\n  }\n\n  toDate (date : String) : string {\n    if (!date) return \"Pas encore\";\n    var splitted = date.split(\"T\", 1);\n    return splitted[0];\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class = \"t-2 mb-4 text-lg-left text-center\">Vos précédents gains :</div>\n  <!-- <table class=\"table align-middle pa-1\" *ngIf=\"tickets$ | async as tickets\"> -->\n  <div class=\"table-responsive-sm\">\n    <table class=\"table pa-1\" *ngIf=\"tickets$ | async as tickets\">\n      <thead class=\"table-borderless\">\n        <tr>\n          <td></td>\n          <td class=\"produit \" scope=\"col\">Produit</td>\n          <td scope=\"col\">Lien boutique en ligne</td>\n          <td scope=\"col\">Code</td>\n          <!-- <td scope=\"col\">Status</td> -->\n          <td scope=\"col\">Gagné le</td>\n          <td scope=\"col\">Récupéré le</td>\n        </tr>\n      </thead>\n      <tbody>\n        <tr class=\"\" *ngFor=\"let ticket of tickets\">\n          <td class=\"img\">\n            <img src=\"{{imgSrcInfuseur}}\" class=\"\" *ngIf = \"ticket.gain=='infuseur à thé'\">\n            <img src=\"{{imgSrcThe1}}\" class=\"\" *ngIf = \"ticket.gain=='une boite de 100g d’un thé détox ou d’infusion'\">\n            <img src=\"{{imgSrcThe2}}\" class=\"\" *ngIf = \"ticket.gain=='une boite de 100g d’un thé signature'\">\n            <img src=\"{{imgSrcCoffret1}}\" class=\"\" *ngIf = \"ticket.gain=='un coffret découverte d’une valeur de 39€'\">\n            <img src=\"{{imgSrcCoffret2}}\" class=\"\" *ngIf = \"ticket.gain=='un coffret découverte d’une valeur de 69€'\">\n          </td>\n          <td class=\"produit align-middle\">{{ ticket.gain }}</td>\n          <td class=\"align-middle\"><a class=\"a-1\" href=''>Voir Le produit</a></td>\n          <td class=\"align-middle\">{{ ticket.code}}</td>\n          <!-- <td class=\"align-middle\">\n            <p *ngIf=\"ticket.etat=='valide'\">Gain reçu</p>\n            <p *ngIf=\"ticket.etat=='distribue'\">Validé</p>\n          </td> -->\n          <td class=\"align-middle\">{{this.toDate(ticket.createdAt)}}</td>\n          <td class=\"align-middle\">{{this.toDate(ticket.validateAt)}}</td>\n        </tr>\n      </tbody>\n    </table>\n\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-list-users-view',\n  templateUrl: './admin-list-users-view.component.html',\n  styleUrls: ['./admin-list-users-view.component.scss']\n})\nexport class AdminListUsersViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header-admin></app-header-admin>\n<div class=\"row no-gutters brd-top-1 brd-btm-1\">\n  <div class=\"d-md-block d-none col-md-3 col-lg-3\">\n    <app-sidebar-admin></app-sidebar-admin>\n  </div>\n  <div class=\"col-12 col-md-9 col-lg-9 no-gutters\">\n    <app-list-users></app-list-users>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Employe } from '../models/Employe';\nimport { AuthService } from '../services/auth.service';\nimport { Ticket } from \"../models/Ticket\";\nimport { MatDialog } from '@angular/material/dialog';\nimport { PopUpComponent } from '../pop-up/pop-up.component';\nimport { environment } from '../../environments/environment';\n\n\n@Component({\n  selector: 'app-emp-home',\n  templateUrl: './emp-home.component.html',\n  styleUrls: ['./emp-home.component.scss']\n})\nexport class EmpHomeComponent implements OnInit {\n\n  @Input() emp$ : Observable<Employe> ;\n  @Input() ticket$ : Observable<Ticket> ;\n\n  constructor(\n    private httpClient : HttpClient,\n    public dialog: MatDialog\n  ) { }\n\n  ngOnInit(): void {\n    var url = environment.apiUrl+\"/user/me\";\n    this.emp$ = this.httpClient.get<Employe>(url);\n  }\n\n  onSubmitSearch(form : NgForm){\n    var url = environment.apiUrl+\"/ticket/\";\n    this.ticket$ = this.httpClient.get<Ticket>(url+form.value.code);\n  }\n  onAssigne(code : string){\n      var url=environment.apiUrl+'/employe/ticket/';\n      this.httpClient\n      .get(url+code)\n      .toPromise()\n      .then(\n        (res : any) => {\n          var content = \"Gain a bien été récupéré\";\n          var link = 'emp_home';\n          this.openDialog(\"Message de confirmation\", content, link);\n        },\n        (error) => {\n          var content = error.error.error;\n          var link = 'emp_home';\n          this.openDialog(\"Error\", content, link);\n        }\n      )\n  }\n  openDialog(title : String, content : String, link : String) {\n    this.dialog.open(PopUpComponent, {\n      width: '50%',\n      data: {\n        title: title,\n        content: content,\n        link : link\n      }\n    });\n  }\n}\n","<app-header-emp></app-header-emp>\n<div class=\"row no-gutters brd-top-1 brd-btm-1 min-h-40\">\n  <div class=\"d-md-block d-none col-md-3 col-lg-2\">\n    <app-sidebar-emp></app-sidebar-emp>\n  </div>\n  <div class=\"col-12 col-md-9 col-lg-10 no-gutters p-5\">\n    <div class=\"row no-gutters\">\n      <div class=\"d-felx text-lg-left text-center\" *ngIf=\"emp$ | async as emp\">\n        <p class=\"t-1\" >Bonjour {{emp.prenom}}, bienvenue dans votre espace employé.</p>\n      </div>\n      <div class=\"d-flex w-100\">\n        <form class=\"text-lg-left text-center w-100\" (ngSubmit)=\"onSubmitSearch(f)\" #f='ngForm'>\n          <p class=\"pa-1 text-lg-left text-center\">Renseigner un code</p>\n          <div class=\"text-lg-left text-center \">\n            <input type=\"text\" class=\"w-50 mr-2\" id=\"code\" name=\"code\" aria-describedby=\"codeHelp\" ngModel required>\n            <button type=\"submit\" class=\"btn-2 cursor-pointer\" [disabled]=\"f.invalid\">Valider</button>\n          </div>\n\n        </form>\n      </div>\n    </div>\n\n    <div class=\"container-fluid no-gutters\" *ngIf=\"ticket$ | async as ticket\">\n      <div class=\"d-lg-block d-none\">\n        <div class=\"m-5 no-gutters row\">\n          <div class=\"col-3\">\n            <div class=\"pa-1\">Votre code</div>\n            <div class=\"t-2\">\n              {{ticket.code}}\n            </div>\n          </div>\n          <div class=\"col-4\">\n            <p class=\"pa-1 d-block \">Votre gain</p>\n            <div class=\"d-flex\">\n              <img src=\"../assets/images/coffret-1.png\" class=\"img\">\n            </div>\n          </div>\n          <div class=\"col-5 pl-5 d-flex flex-column\">\n            <p class=\" d-block clr-1\">Votre gaind</p>\n            <p class = \"pa-1\">Valeur du gain 69€</p>\n            <p class=\"t-1\">{{ticket.gain}}</p>\n            <p class= \"pa-2\">Toutes les saveurs de nos thés signatures réunies\n              en un seul coffret découverte. </p>\n            <a class=\"nav-link text-dark underline-hover p-0 mt-auto\" href=\"#\">Voir le produit </a>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"d-block d-lg-none m-5\">\n        <div class=\"d-flex\"><div class = \"d-flex flex-collumn mx-auto text-align-center\">Votre code : <h5>&nbsp; {{ticket.code}}</h5></div></div>\n        <div class=\"d-flex\"><p class=\"t-1 mx-auto text-align-center\">{{ticket.gain}}</p></div>\n        <div class=\"d-flex mb-3\">\n          <img src=\"../assets/images/coffret-1.png\" class=\"w-75 mx-auto\">\n        </div>\n        <div class=\"d-flex\"><p class = \"pa-1 mx-auto text-align-center\">Valeur du gain 69€</p></div>\n        <div class=\"d-flex\"><p class= \"pa-2 mx-auto text-align-center\">Toutes les saveurs de nos thés signatures réunies\n          en un seul coffret découverte. </p></div>\n        <div class=\"d-flex\"><a class=\"nav-link text-dark underline-hover p-0 mx-auto\" href=\"#\">Voir le produit </a></div>\n      </div>\n      <div class=\"t-2\">Information utilisateur : </div>\n      <table class=\"table able-borderless table-responsive-md\">\n        <tbody>\n          <tr>\n            <td class=\"text-lg-left text-center\">{{ticket.User.last_name}}</td>\n            <td class=\"text-lg-left text-center\">{{ticket.User.first_name}}</td>\n            <td class=\"text-lg-left text-center\">{{ticket.User.email}}</td>\n            <!-- <td class=\"text-lg-left text-center\">{{ticket.User.address}}</td> -->\n            <td class=\"text-lg-left text-center\">{{ticket.User.city}}</td>\n            <td class=\"text-lg-left text-center\">{{ticket.User.zipCode}}</td>\n            <td class=\"text-lg-left text-center\">{{ticket.etat}}</td>\n            <button class =\"btn-2 mx-2\" *ngIf=\"ticket.etat!='valide'\" (click)=\"onAssigne(ticket.code)\">Récupérer le gain</button>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <!-- <div class=\"row mb-5\">\n      <app-list-users></app-list-users>\n    </div> -->\n  </div>\n</div>\n<app-footer></app-footer>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from \"@angular/common/http\";\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { User } from '../models/User';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PopUpComponent } from '../pop-up/pop-up.component';\nimport { PopUpDeleteComponent } from '../pop-up-delete/pop-up-delete.component';\nimport { environment } from '../../environments/environment';\n\n\n\n@Component({\n  selector: 'app-list-users',\n  templateUrl: './list-users.component.html',\n  styleUrls: ['./list-users.component.scss']\n})\nexport class ListUsersComponent implements OnInit {\n  @Input() users$ : Observable<User>;\n  filter : string;\n  user : User;\n  passwordIncorrect =false;\n  passwordNotIdenticals : false;\n\n  listUsers = true;\n  // confirmationDeleteForm = false;\n  // confirmationDeleteMsg = false;\n  updateUserForm = false;\n  // confirmationUpdateUserMsg = false;\n  email = ''\n  constructor(\n    private httpClient : HttpClient,\n    private router : Router,\n    public dialog: MatDialog\n\n  ) {};\n\n\n    ngOnInit(): void {\n    var url = environment.apiUrl+\"/admin/users\";\n    this.users$ = this.httpClient.get<User>(url);\n  }\n\n  hiddenAll (){\n    this.listUsers = false;\n    // this.confirmationDeleteForm = false;\n    // this.confirmationDeleteMsg = false;\n    this.updateUserForm = false;\n    // this.confirmationUpdateUserMsg = false;\n  }\n\n  gererUser(user : User){\n    this.user = user;\n    this.hiddenAll();\n    this.updateUserForm=true;\n  }\n\n  backToListUsers(){\n    this.user = null;\n    this.hiddenAll();\n    this.listUsers=true;\n  }\n\n  deleteUser(email : string){\n    this.openDialogDelete();\n    this.hiddenAll();\n    this.email = email;\n    // this.confirmationDeleteForm =true;\n  }\n\n  confirmDeleteUser(){\n    var url = 'api/user/admin/';\n    this.httpClient\n    .delete(url+this.email )\n    .toPromise()\n    .then(\n      (res : any) => {\n        var title ='Confirmation';\n        var content = \"Le compte a bien été supprimé\";\n        var link ='/admin_list_users';\n        this.openDialog(title, content, link);\n        this.email = '';\n        this.hiddenAll();\n        this.listUsers=true;\n\n      },\n      (error) => {\n        alert(error.error.error);\n        console.log(error);\n      }\n    )\n  }\n  cancel(){\n    this.email = '';\n    // this.hiddenAll();\n    // this.listUsers = true;\n  }\n\n  onSubmitPassword(form : NgForm){\n    // var title ='Confirmation';\n    // var content = \"Le mot de passe a bien été mis à jour\";\n    // var link ='/admin_list_emp';\n    // this.openDialog(title, content, link);\n    // this.hiddenAll();\n    // this.listEmployes =true;\n  }\n\n  onSubmitInfos(form : NgForm) {\n    var url = 'api/user/admin/';\n    const body  = {\n      gender: form.value.gender,\n      nom: form.value.lastName,\n        prenom: form.value.firstName,\n//          phone: form.value.phone,\n        address: form.value.address,\n        city: form.value.city,\n        zipCode: form.value.zip,\n    }\n    this.httpClient\n    .put(url+this.user.email, body )\n    .toPromise()\n    .then(\n      (res : any) => {\n        var title ='Confirmation';\n        var content = \"Le compte client a bien été mis à jour\";\n        var link ='/admin_list_users';\n        this.openDialog(title, content, link);\n        this.hiddenAll();\n        // this.updateEmployeForm = false;\n        this.listUsers =true;\n      },\n      (error) => {\n        alert(error.error.error);\n        console.log(error);\n      }\n    )\n\n  }\n\n  openDialog(title : String, content : String, link : String) {\n    this.dialog.open(PopUpComponent, {\n      width: '50%',\n      data: {\n        title: title,\n        content: content,\n        link : link\n      }\n    });\n  }\n\n  openDialogDelete() {\n      const dialogRef = this.dialog.open(PopUpDeleteComponent, {\n        width: '50%',\n        height: '200px',\n        data: {\n          title: \"Supprimer\",\n          content: \"voulez vraiment supprimer cet utilisateur\",\n          link : '/admin_list_users'\n        }\n      });\n\n      dialogRef.afterClosed().subscribe(result => {\n        if ( result ){\n              this.confirmDeleteUser();\n            }else{\n              console.log( result );\n\n              this.cancel();\n              this.hiddenAll();\n              this.listUsers =true;\n            }\n        // console.log(`Dialog result: ${result}`);\n      });\n    }\n\n}\n","<div class=\"filter mt-4 ml-5 mb-5\" *ngIf=\"listUsers\">\n  <div class=\"row\">\n    <div class=\"col-lg-6 col-12\">\n      <span class=\"pa-1 mb-4 mr-3\">Filtrer les utilisateur : </span>\n      <input class =\"col-5\" type=\"text\" name=\"filter\" value=\"\" placeholder=\"serach\" [(ngModel)]=\"filter\">\n    </div>\n    <div class=\"d-none d-lg-block\">\n      <span class=\"pa-1 mb-4 mr-3\">Exporter la liste des utilisateur : </span>\n      <button class=\"btn-2\" type=\"button\" name=\"button\">Exporter</button>\n    </div>\n  </div>\n</div>\n<div class=\"mt-5 ml-5\" *ngIf=\"listUsers\">\n  Voici la liste des utilisateurs qui correspondent à votre recherche :\n  <table class=\"table mt-4 w table-borderless table-responsive-lg\" *ngIf=\"users$ | async as users\" >\n    <thead class=\"bg-clr-2 clr-1\">\n      <tr>\n        <td scope=\"col\">Prénom</td>\n        <td scope=\"col\">Nom</td>\n        <td scope=\"col\">Email</td>\n        <td scope=\"col\">Ville</td>\n        <td scope=\"col\">Code Postal</td>\n        <td scope=\"col\"></td>\n        <td scope=\"col\"></td>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"brd-top-1\" *ngFor=\"let user of users | filter : filter\">\n        <td class=\"align-middle\">{{ user.first_name }}</td>\n        <td class=\"align-middle\">{{ user.last_name }}</td>\n        <td class=\"align-middle\">{{ user.email }}</td>\n        <td class=\"align-middle\">{{ user.city }}</td>\n        <td class=\"align-middle\">{{ user.zipCode }}</td>\n        <td class=\"align-middle\">\n          <button class=\"btn-2\" (click)=\"gererUser(user)\">Gérer</button>\n        </td>\n        <td class=\"align-middle\">\n          <button class=\"btn-3 px-2\" (click)=\"deleteUser(user.email)\">\n            <svg>\n              <rect x=\"0\" y=\"0\" fill=\"none\" width=\"100%\" height=\"100%\"></rect>\n            </svg>\n            Supprimer\n          </button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n<!-- <div class=\"w-50 mx-auto  text-align-center p-5 mt-5\" *ngIf=\"confirmationDeleteForm\" >\n  <p class=\"\">voulez vous vraiment supprimer cet utilisateur</p>\n  <div class=\"\">\n    <button class =\"btn-2 px-2 mr-2\" (click)=\"confirmDeleteUser()\">Supprimer</button>\n    <button class =\"btn-1 px-2\" (click)=\"cancel()\">\n      <svg>\n        <rect x=\"0\" y=\"0\" fill=\"none\" width=\"100%\" height=\"100%\"></rect>\n      </svg>\n      Annuler\n    </button>\n  </div>\n</div> -->\n\n<!-- <div class=\"w-50 mx-auto  text-align-center p-5 mt-5 bg-clr-2\" *ngIf=\"confirmationDeleteMsg\" >\n  <p class=\"clr-1\">L'utilisateur a bien été supprimer</p>\n  <div class=\"\">\n    <button class =\"btn-4 px-4 mr-2\" (click)=\"cancel()\"><svg>\n      <rect x=\"0\" y=\"0\" fill=\"none\" width=\"100%\" height=\"100%\"></rect>\n    </svg>\n    ok\n  </button>\n  </div>\n</div> -->\n\n\n<div class=\"col-12 col-lg-7 no-gutters my-5\" *ngIf=\"updateUserForm\">\n  <p class=\"ml-4\" (click)=\"backToListUsers()\" >Revenir à la liste des users<p>\n  <form class= \"w mx-auto mb-5\" (ngSubmit)=\"onSubmitEmail(fEmail)\" #fEmail='ngForm'>\n    <p class=\"t-1\">Modifier l'email</p>\n    <input type=\"email\" class=\"w-100 mb-3\" id=\"email\" name=\"email\" placeholder=\"Nouvelle adresse mail\" aria-describedby=\"emailHelp\" [ngModel]=\"user.email\" required>\n    <button type=\"submit\" class=\"btn-2\" [disabled]=\"fEmail.invalid\">Valider</button>\n  </form>\n\n  <form class= \"w mx-auto mt-5\" (ngSubmit)=\"onSubmitPassword(fPassword)\" #fPassword='ngForm'>\n    <p class=\"t-1\">Modifier le mot de passe</p>\n    <input type=\"password\" class=\"w-100 mb-3\" id=\"newPassword\" name =\"newPassword\" placeholder=\"Nouveau mot de passe\" ngModel required>\n    <input type=\"password\" class=\"w-100 mb-3\" id=\"confNewPassword\" name =\"confNewPassword\" placeholder=\"Confirmation du nouveau mot de passe\" ngModel required>\n    <p class=\"\" *ngIf=\"passwordIncorrect\">Email ou mot de passe incorrect !  </p>\n    <p class=\"\" *ngIf=\"passwordNotIdenticals\">Email ou mot de passe incorrect !  </p>\n    <button type=\"submit\" class=\"btn-2 mb-5\" [disabled]=\"fPassword.invalid\">Valider</button>\n  </form>\n  <form class=\"w mx-auto\" (ngSubmit)=\"onSubmitInfos(fInfos)\" #fInfos='ngForm'>\n    <p class=\"t-1\">Modifier les informations générales</p>\n    <select class=\"w-100 mb-3\" name=\"gender\" required [ngModel]=\"user.gender\">\n      <option value=\"Mr\">Monsieur</option>\n      <option value=\"Mme\">Madame</option>\n    </select>\n    <input type=\"text\" class=\"w-100 mb-3\" id=\"lastName\" name=\"lastName\" placeholder =\"Nom *\"  required [ngModel]=\"user.last_name\">\n    <input type=\"text\" class=\"w-100 mb-3\" id=\"firstName\" name=\"firstName\" placeholder =\"Prénom *\" required [ngModel]=\"user.first_name\">\n    <input type=\"text\" class=\"w-100 mb-3\" id=\"phone\" name=\"phone\" placeholder=\"Téléphone\" required [ngModel]=\"user.phone\">\n    <input type=\"text\" class=\"w-100 mb-3\" id=\"address\" name=\"address\" aria-describedby=\"addressHelp\" placeholder =\"Adresse *\" required [ngModel]=\"user.address\">\n    <div class=\"row no-gutters mb-3\">\n      <div class=\"col g-1\">\n        <input id=\"zip\" type=\"text\" class=\"w-100\" name=\"zip\" placeholder =\"Code postale *\" required [ngModel]=\"user.zipCode\">\n      </div>\n      <div class=\"col g-1\">\n        <input id=\"city\" type=\"text\" class=\"w-100\" name=\"city\" placeholder =\"Ville *\" required [ngModel]=\"user.city\">\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn-2 mb-4\" >Enregister les modifications</button>\n  </form>\n</div>\n\n<!-- <div class=\"bg-clr-2 w-50 mx-auto  text-align-center p-5 mt-5\" *ngIf=\"confirmationUpdateUserMsg\" >\n  <p class=\"clr-1\">L'utilisateur a bien été mis à jour</p>\n  <div class=\"clr-1\">\n    <button class =\"btn-4 px-4 mr-2\" (click)=\"backToListUsers()\"><svg>\n      <rect x=\"0\" y=\"0\" fill=\"none\" width=\"100%\" height=\"100%\"></rect>\n    </svg>\n    ok\n  </button>\n  </div>\n</div> -->\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IndexViewComponent } from \"./index-view/index-view.component\";\nimport { ConnexionComponent } from \"./connexion/connexion.component\";\nimport { RegisterComponent } from \"./register/register.component\";\nimport { EmailConfirmationComponent } from \"./email-confirmation/email-confirmation.component\";\nimport { RegisterConnexionComponent } from \"./register-connexion/register-connexion.component\";\nimport { ForgetPasswordComponent } from \"./forget-password/forget-password.component\";\nimport { ReinitPasswordComponent } from \"./reinit-password/reinit-password.component\";\nimport { ProfilComponent } from \"./profil/profil.component\";\nimport { HomeComponent } from \"./home/home.component\";\nimport { HistoryComponent } from \"./history/history.component\";\nimport { EmpHomeComponent } from \"./emp-home/emp-home.component\";\nimport { EmpLoginComponent } from \"./emp-login/emp-login.component\";\nimport { EmpStatsComponent } from \"./emp-stats/emp-stats.component\";\nimport { AdminHomeComponent } from \"./admin-home/admin-home.component\";\nimport { EmailingComponent } from \"./emailing/emailing.component\";\nimport { AdminLoginComponent } from \"./admin-login/admin-login.component\";\nimport { AdminNewEmpComponent } from \"./admin-new-emp/admin-new-emp.component\";\nimport { AdminModifyEmpComponent } from \"./admin-modify-emp/admin-modify-emp.component\";\nimport { AdminUpdateUserComponent } from \"./admin-update-user/admin-update-user.component\";\nimport { AdminListEmpComponent } from \"./admin-list-emp/admin-list-emp.component\";\nimport { ListUsersComponent } from \"./list-users/list-users.component\";\nimport { AdminListUsersViewComponent } from \"./admin-list-users-view/admin-list-users-view.component\";\nimport { EmpListUsersViewComponent } from \"./emp-list-users-view/emp-list-users-view.component\";\nimport { LandingPageComponent } from \"./landing-page/landing-page.component\";\nimport { SimulateurCaisseComponent } from './simulateur-caisse/simulateur-caisse.component';\nimport { StylePageComponent } from \"./style-page/style-page.component\";\nimport { RegisterConfirmationComponent } from \"./register-confirmation/register-confirmation.component\";\nimport { MailPasswordSentComponent } from \"./mail-password-sent/mail-password-sent.component\";\nimport { AuthGuard } from \"./services/authGuard.service\";\nimport { AuthGuardEmp } from \"./services/authGuardEmp.service\";\nimport { AuthGuardAdmin } from \"./services/authGuardAdmin.service\";\n\nconst routes: Routes = [\n  { path :'' , component : LandingPageComponent },\n  { path :'liste_pages' , component : IndexViewComponent },\n  { path :'login' , component : ConnexionComponent },\n  { path :'register' , component : RegisterConnexionComponent  },\n  { path :'validation/:id' , component : EmailConfirmationComponent  },\n  { path :'password_forgotten' , component : ForgetPasswordComponent  },\n  { path :'reinit_password/:id/:token' , component : ReinitPasswordComponent  },\n  { path :'client_infos_profil' ,canActivate :[AuthGuard], component : ProfilComponent  },\n  { path :'client_home' , canActivate :[AuthGuard], component : HomeComponent  },\n  { path :'caisse' , canActivate :[AuthGuard], component : SimulateurCaisseComponent  },\n  { path :'emp'  , canActivate :[AuthGuardEmp], component : EmpHomeComponent },\n  { path :'emp_home'  , canActivate :[AuthGuardEmp], component : EmpHomeComponent },\n  { path :'emp_login'  ,component : EmpLoginComponent },\n  { path :'emp_stats'  , canActivate :[AuthGuardEmp], component : EmpStatsComponent },\n  { path :'admin'  , canActivate :[AuthGuardAdmin], component : AdminHomeComponent },\n  { path :'admin_home'  , canActivate :[AuthGuardAdmin], component : AdminHomeComponent },\n  { path :'admin_emailing'  , canActivate :[AuthGuardAdmin], component : EmailingComponent },\n  { path :'admin_login'  ,component : AdminLoginComponent },\n  { path :'admin_new_emp'  ,canActivate :[AuthGuardAdmin], component : AdminNewEmpComponent },\n  { path :'admin_modify_emp/:id_emp'  ,canActivate :[AuthGuardAdmin], component : AdminModifyEmpComponent },\n  { path :'admin_update_user/:id_user'  ,canActivate :[AuthGuardAdmin], component : AdminUpdateUserComponent },\n  { path :'admin_list_emp'  ,canActivate :[AuthGuardAdmin], component : AdminListEmpComponent },\n  { path :'list_users'  , component : ListUsersComponent },\n  { path :'admin_list_users'  ,canActivate :[AuthGuardAdmin], component : AdminListUsersViewComponent },\n  { path :'emp_list_users'  , component : EmpListUsersViewComponent },\n  { path :'page_de_style'  , component : StylePageComponent },\n  { path :'confirmation_register/:email'  , component : RegisterConfirmationComponent },\n  { path :'mail_password_sent/:email'  , component : MailPasswordSentComponent },\n\n  // { path :'history' ,component : HistoryComponent },\n  { path :'**' , redirectTo : '/'  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-list-emp',\n  templateUrl: './admin-list-emp.component.html',\n  styleUrls: ['./admin-list-emp.component.scss']\n})\nexport class AdminListEmpComponent implements OnInit {\n\n  constructor() { }\n  ngOnInit(): void {\n  }\n\n}\n","<app-header-admin></app-header-admin>\n<div class=\"row no-gutters brd-top-1 brd-btm-1\">\n  <div class=\"d-md-block d-none col-md-3 col-lg-3\">\n    <app-sidebar-admin></app-sidebar-admin>\n  </div>\n  <div class=\"col-12 col-md-9 col-lg-9 no-gutters\">\n    <app-list-emp></app-list-emp>\n  </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from \"@angular/router\";\n\nexport interface DialogData {\n  title: string;\n  content: string;\n  link: string;\n}\n\n@Component({\n  selector: 'app-pop-up',\n  templateUrl: './pop-up.component.html',\n  styleUrls: ['./pop-up.component.scss']\n})\nexport class PopUpComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<PopUpComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    private router : Router\n  ) {}\n\n  ngOnInit(): void {\n  }\n\n  onClick() {\n    this.dialogRef.close();\n    this.router.navigate([this.data.link]);\n\n  }\n\n}\n","<h1 mat-dialog-title class='t-1'>{{data.title}}</h1>\n<div mat-dialog-content class='pa-1'>{{data.content}}</div>\n<div mat-dialog-actions class= \"d-flex\">\n  <!-- <button mat-button mat-dialog-close class='btn-1 ml-2'>\n    <svg>\n      <rect x=\"0\" y=\"0\" fill=\"none\" width=\"100%\" height=\"100%\"></rect>\n    </svg>\n    Fermer\n  </button> -->\n  <button mat-button class='btn-2 ml-auto' (click)=\"onClick()\">Fermer</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-re-connect',\n  templateUrl: './re-connect.component.html',\n  styleUrls: ['./re-connect.component.scss']\n})\nexport class ReConnectComponent implements OnInit {\n\n  constructor(\n    private authService : AuthService,\n    private router : Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  seReConnecter(){\n     this.authService.deconnexion();\n     this.router.navigate(['register']);\n  }\n}\n","<div class=\"\">\n  <div class=\"w-50 mx-auto  text-align-center\">\n    <p class=\"mt-5 mb-5 pa-1 aling-center\">Vous êtes deconnecter, merci de cliquer sur ce boutton pour vous diriger à la page de connexion</p>\n    <div class=\"d-flex\">\n      <button class=\"btn-2 mb-5 mx-auto\" (click)=\"seReConnecter()\">\n        Se Reconnecter\n      </button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-emp-list-users-view',\n  templateUrl: './emp-list-users-view.component.html',\n  styleUrls: ['./emp-list-users-view.component.scss']\n})\nexport class EmpListUsersViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>emp-list-users-view works!</p>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}